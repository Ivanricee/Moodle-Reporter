{"version":3,"sources":["selectors/usuarios.js","App/components/pdf/RegistroUsuario.js","App/components/pdf/Listados/ListConcentradoUsuarios.js","actions/fetchCourses.js","App/containers/List/CoursesList.js","App/services/index.js","api/index.js","api/url.js","App/components/UcFirst.js","App/components/pdf/styles.js","assets/images/pdf/concentrado_tutores.jpg","assets/images/pdf/vasijas_final.jpg"],"names":["__webpack_require__","d","__webpack_exports__","getDashboardInfo","getDashboardLogs","getAlumnos","getProfesor","getCourses","state","dashboardinfo","dashboardlogs","alumnos","profesor","courses","RegistroUsuario","logs","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_react_pdf_renderer__WEBPACK_IMPORTED_MODULE_6__","className","size","style","styles","body","image","src","concentrado_profesores","textTitle","length","userName","courseName","contentData","fontSize","width","text","content","map","log","index","dataBlock","height","textData","timecreated","moment","unix","format","concat","count","React","Component","ListConcentradoUsuarios","_this$props","data","type","usuario","dataBlockback","textAlign","firstname","paddingLeft","paddingRight","lastname","firstaccess","lastaccess","pageNumber","render","_ref","totalPages","fixed","fetchCourses","createAction","FETCH_COURSES","apiGet","urlcourseUsers","PROFESOR","CursosList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closePDFmodal","setState","open","pdfLogs","userType","qualityFilter","userCourses","idCurso","idUsuario","_this2","MyExportCSV","react_default","Row","Col","xs","sm","md","Button","variant","onClick","onExport","UcFirst","columns","dataField","csvFormatter","cell","row","fullname","title","formatter","align","csvText","classes","prof","arr","react_bootstrap_table2_toolkit_lib_default","keyField","exportCSV","onlyExportFiltered","exportAll","noAutoBOM","fileName","csvProps","lib_default","assign","baseProps","onDataSizeChange","handleDataChange","condensed","striped","hover","bordered","pagination","paginationFactory","noDataIndication","filter","filterFactory","cursos","result","countcourse","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","has","courseid","push","set","err","return","console","filterCourseUsers","_Aux","Modal","show","onHide","dialogClassName","Header","closeButton","Title","Body","class","Spinner","animation","Footer","xl","Card","showCourses","withRouter","connect","dispatch","getLogs","getSingleLogs","getCourseUsers","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","url","fetch","then","v","json","urlLogs","idUser","idRol","idCourse","logsJson","mapUser","contUser","first","last","id_user","nombre","apellido","catch","error","total","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","userid","name","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","coursesJson","users","usersJson","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","urlUsuarios","urlDashbrdBasicInfo","urlDashbrdCrseLogs","urlCourses","urlBase","string","charAt","toUpperCase","slice","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","flexDirection","flexWrap","backgroundColor","border","block","marginTop","verticalAlign","borderBottom","borderBottomWidth","borderBottomStyle","position","bottom","left","right","color","module","exports","p"],"mappings":"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","file":"static/js/22.5e396f00.chunk.js","sourcesContent":["export const getDashboardInfo = state => state.dashboardinfo;\r\nexport const getDashboardLogs = state => state.dashboardlogs;\r\nexport const getAlumnos = state => state.alumnos;\r\nexport const getProfesor = state => state.profesor;\r\nexport const getCourses = state => state.courses;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass RegistroUsuario extends React.Component {\r\n         \r\n    render() {\r\n        const { logs } = this.props;        \r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n            <Page size=\"A4\"  style={styles.body} >\r\n            <Image style={styles.image} src={concentrado_profesores}  />\r\n            \r\n            <Text style={styles.textTitle}>Tutor: {logs[logs.length-1].userName}</Text>\r\n            <Text style={styles.textTitle}>Curso:  {logs[logs.length-1].courseName}</Text>\r\n            <View style={styles.contentData}>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n\r\n            </View>\r\n            <View style={styles.content}>\r\n                    {\r\n                      logs.map(\r\n                        (log,index) => {\r\n                          if(index != logs.length-1 ){\r\n                            return (                                                                                \r\n                            <View style={[styles.dataBlock,{height: 30,}]} >\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? moment.unix(log.timecreated).format(\"LL\") : \"Sin Actividad\" }</Text>\r\n                              </View>\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? `${log.count} veces` : \"0\" } \r\n                                </Text>\r\n                              </View>\r\n                            </View>                                                                                        \r\n                            );                          \r\n                          }\r\n                        })\r\n                      }\r\n            </View>\r\n\r\n            </Page>\r\n   </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\nexport default RegistroUsuario;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './../styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass ListConcentradoUsuarios extends React.Component {     \r\n    render() {\r\n        const { data, type } = this.props;\r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n          <Page size=\"A4\"  style={styles.body}  >\r\n          <Image style={styles.image} src={concentrado_profesores}  />\r\n          <View style={styles.contentData}>\r\n            <View style={[{fontSize: 7,width: 38,}]} >\r\n             <Text style={styles.text}>No.</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 108,}]} >\r\n             <Text style={styles.text}>NOMBRE</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 178,}]} >\r\n             <Text style={styles.text}>APELLIDO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 98,}]} >\r\n             <Text style={styles.text}>PRIMER INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 98, }]} >\r\n             <Text style={styles.text}>ÚLTIMO INGRESO</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.content}>\r\n              \r\n              {\r\n                \r\n                data[0].map(\r\n                (usuario,index) => {\r\n                  // console.log(\"showCourses\")\r\n                  //console.log(this.showCourses(student.enrolledcourses, student.fullname, \"curso\"))\r\n                  // let heig = 25 * student.enrolledcourses[0].length;\r\n                  let heig = 76.5/2;\r\n                  let size = 8;                                  \r\n                  return (<View style={ index%2 == 0 ?  [styles.dataBlock,{height: heig}]  :  [styles.dataBlockback,{height: heig}]      } >\r\n                      <View style={[styles.textData,{fontSize: 7,width: 38}]} >\r\n                      <Text style={styles.text}>{index+1}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{width: 108,textAlign: \"left !important\"}]} >\r\n                      <Text style={[styles.text,{fontSize: 8 }]}>{usuario.firstname}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 178,paddingLeft: 7, paddingRight:7}]} >\r\n                      <Text style={styles.text}>{usuario.lastname}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 98}]} >\r\n                      <Text style={styles.text}>{usuario.firstaccess != 0 ?\r\n                      moment.unix(usuario.firstaccess).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 135,paddingRight:30}]} >\r\n                      <Text style={styles.text}>{usuario.lastaccess != 0 ?\r\n                      moment.unix(usuario.lastaccess).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }</Text>\r\n                      </View>                 \r\n                    </View>)\r\n                  })\r\n              }\r\n              </View>\r\n              <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\r\n                          `${pageNumber} / ${totalPages}`\r\n                        )} fixed />\r\n\r\n          </Page>\r\n        </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListConcentradoUsuarios;\r\n","import {  FETCH_COURSES, PROFESOR } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlcourseUsers } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\nexport const fetchCourses = createAction(FETCH_COURSES, apiGet(urlcourseUsers+\"/0/\"+PROFESOR));\r\n\r\n","import React from 'react';\r\nimport {Row, Col, Card, Container, Button, Modal, Spinner, Form} from 'react-bootstrap';\r\nimport UcFirst from \"../../components/UcFirst\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { connect } from 'react-redux';\r\n//action creator:\r\nimport { fetchCourses } from '../../../actions/fetchCourses';\r\n\r\n\r\nimport { getCourses } from '../../../selectors/usuarios';\r\n//creador de tablas\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { multiSelectFilter, Comparator  } from 'react-bootstrap-table2-filter';\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\n\r\n//import pdf component\r\nimport ListConcentradoUsuarios from './../../components/pdf/Listados/ListConcentradoUsuarios';\r\nimport RegistroUsuario from './../../components/pdf/RegistroUsuario';\r\n\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//services for filtering\r\nimport {filterCourseUsers} from './../../services';\r\n\r\n//form\r\nclass CursosList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          //obtiene la consulta que hace el fetch getLogs()  \r\n          open: false,\r\n          pdfLogs:[],\r\n          userType:3,\r\n          qualityFilter:()=>{},\r\n          userCourses:[],\r\n        };\r\n      }\r\n    openPDFmodal(idCurso, idUsuario, userName){\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    closePDFmodal = () => {   \r\n        this.setState({ open: false });                \r\n    };\r\n\r\n    componentDidMount(){        \r\n       // const courses =  getCourses(urlCourses) \r\n       // courses.then((coursesRes) => (this.setState({ courses: coursesRes})  ))                             \r\n        if(this.props.courses.length == 0){     \r\n            this.props.fetchCourses();                                         \r\n        }  \r\n    }    \r\n\r\n\r\n\r\n    showCourses(){ \r\n        \r\n        //formato de cada row de usuario profesor/alumno             \r\n\r\n        function tituloFormat(column, colIndex) {\r\n            return (\r\n              <h5 className=\"card-title headerbtable col-xs-12 col-md-6 col-lg-4\">Cursos</h5>\r\n            );\r\n          }\r\n        \r\n        const MyExportCSV = (props) => {\r\n            const handleClick = () => {\r\n              props.onExport();\r\n            };\r\n            return (<Row className=\"button-header-container\">\r\n                        <Col xs={0} sm={6}>.</Col>\r\n                        <Col xs={6}>\r\n                            <Col  xs={12} sm={9} md={7}>\r\n                            </Col>\r\n                            <Col  xs={12} sm={9} md={7} >                \r\n                            <Button className=\"btn_left\" variant={'outline-primary'}\r\n                                    onClick={ handleClick}><UcFirst text=\"CSV\" /></Button>\r\n                            </Col> \r\n                        </Col> \r\n                                                              \r\n                    </Row>\r\n                    \r\n            );\r\n          };\r\n\r\n          //course filter variables\r\n          const selectOptions = {\r\n          };\r\n          \r\n            function textFormatterDatefirst(cell, row) {                \r\n                return (\r\n                <Row>                   \r\n                    <Col className=\"format-expanse-user\"><h6 className=\"row-text-bt\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>\r\n                         {  row.lastaccess.length >=  2 ?\r\n                            moment.unix(row.lastaccess).format(\"LL\"):\r\n                            \"Sin actividad\"} </h6>\r\n                    </Col>       \r\n    \r\n                </Row>\r\n                );          \r\n            } \r\n            function textFormatterDatelast(cell, row) {                \r\n                return (\r\n                <Row>                   \r\n                    <Col className=\"format-expanse-user\"><h6 className=\"row-text-bt\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>\r\n                         {  row.firstaccess.length >=  2 ?\r\n                            moment.unix(row.firstaccess).format(\"LL\"):\r\n                            \"Sin actividad\"} </h6>\r\n                    </Col>       \r\n    \r\n                </Row>\r\n                );          \r\n            } \r\n            function formatname(cell, row){\r\n                return  row.fullname; \r\n            }\r\n            function formatProfesor(cell, row){\r\n                return row.profesor.map(function(prof,index, arr){                        \r\n                    return `${prof.firstname} ${prof.lastname}`\r\n                })  \r\n            }\r\n            function formatdate(cell, row){\r\n                if(row.lastaccess){\r\n                    return row.lastaccess.length >=  2 ?\r\n                            moment.unix(row.lastaccess).format(\"LL\"):\r\n                            \"Sin actividad\"\r\n                }else if(row.firstaccess){\r\n                    return row.firstaccess.length >=  2 ?\r\n                            moment.unix(row.firstaccess).format(\"LL\"):\r\n                            \"Sin actividad\"\r\n                }\r\n                \r\n            }\r\n\r\n\r\n\r\n            function textFormatterName(cell, row) {\r\n                return (\r\n                    <Row className=\"name-format\">                \r\n                        <Col><p><strong>{ row.fullname }</strong></p></Col>              \r\n                    </Row>\r\n                );          \r\n               } \r\n            function textProfesorFormatter(cell, row) {\r\n                return row.profesor.map(function(prof,index, arr){                        \r\n                    return <p>{`${prof.firstname} ${prof.lastname}`}</p>                                                                                                         \r\n                })        \r\n            } \r\n        //creacion y formato de las columnas de la tabla\r\n        //con collapse\r\n        const columns = [{\r\n            dataField: 'courseid',\r\n            csvFormatter: formatname,\r\n            text: 'Nombre',\r\n            title:false,\r\n           // headerFormatter: tituloFormat,\r\n          // formatter: cell => selectOptions[cell],\r\n          formatter: textFormatterName,\r\n            align: 'left',\r\n            csvText: 'Nombre',\r\n            classes: 'columnbtable',\r\n          },\r\n          {\r\n            dataField: 'fullname',\r\n            text: 'Profesores',\r\n            formatter: textProfesorFormatter,\r\n            csvFormatter: formatProfesor,\r\n           // headerFormatter: tituloFormat,\r\n            align: 'left',\r\n            csvText: 'Profesores',\r\n            classes: 'columnbtable',\r\n          }];\r\n\r\n\r\n        //listado de profesores viene de redux en el actionCreator fetchProfesores        \r\n        if(this.state.userCourses){\r\n           return  (    \r\n            <Row className=\"tableUsers-list\">                \r\n                <Col xs=\"12\">\r\n                <ToolkitProvider\r\n                    keyField=\"id\"\r\n                    data={ this.state.userCourses }\r\n                    columns={ columns }\r\n                    exportCSV={ { onlyExportFiltered: true, \r\n                        exportAll: false,  \r\n                        noAutoBOM: false,\r\n                        fileName: \"Cursos.csv\"\r\n                        } }>\r\n                    {\r\n                        props => (\r\n                            <Col xs=\"12\" className=\"cont-table-csv-course\">\r\n\r\n                            <MyExportCSV { ...props.csvProps } />\r\n                                                    \r\n                            <BootstrapTable \r\n                                { ...props.baseProps }   \r\n                                onDataSizeChange={ this.handleDataChange }                                       \r\n                                condensed\r\n                                striped\r\n                                hover\r\n                                bordered={ false }\r\n                                pagination={ paginationFactory()}\r\n                                noDataIndication=\"No se encontraron alumnos\"\r\n                                filter={ filterFactory() }/>\r\n                        </Col>\r\n                        )\r\n                    }\r\n                </ToolkitProvider>\r\n                </Col>\r\n            </Row>                                          \r\n\r\n           )\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {     \r\n        if(this.state.userCourses.length == 0 && this.props.courses.length >0){           \r\n            const cursos = filterCourseUsers(this.props.courses)                                         \r\n            this.setState({userCourses:cursos})\r\n        }              \r\n        return (   \r\n            <Aux >\r\n                \r\n                <Modal show={this.state.open} onHide={this.closePDFmodal}\r\n                       dialogClassName=\"modal-pdf\">\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Concentrado de tutores</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {\r\n                            this.props.courses.length > 0 ? <ListConcentradoUsuarios data={this.props.courses} type=\"alumnos\"></ListConcentradoUsuarios> :  \r\n                            <Row className=\"justify-content-md-center\"><Col xs=\"12\" class=\"spinner_col\"><Spinner animation=\"grow\" variant=\"info\" />Cargando...</Col></Row>\r\n                        }           \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closePDFmodal}>\r\n                        Cerrar\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                \r\n                <Row className=\"header-container\">                                                                           \r\n                    <Col  xs=\"6\" sm=\"3\" className=\"header-new-format\">CURSOS </Col>\r\n                    <Col   xs=\"2\" sm=\"1\"  className=\"header-count\">{  this.state.userCourses.length  }</Col>       \r\n                </Row>   \r\n           \r\n                <Row >                       \r\n               \r\n                    <Col md={12} xl={12}>                        \r\n                        <Card >\r\n                            \r\n                            <Card.Body className='px-0 py-2' >\r\n                                \r\n                                {\r\n                                    this.showCourses()\r\n                                }\r\n                                \r\n                                \r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>                                                                                        \r\n                </Row>\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      fetchCourses: () => dispatch(fetchCourses())\r\n    }\r\n};\r\n\r\n//hace posible que se puedan user las variables de redux\r\nconst mapStateToProps = state => ({\r\n  //  alumnos: getAlumnos(state),\r\n    courses: getCourses(state)\r\n});\r\n\r\n//connect(props variable,props.functions reducers);\r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps )(CursosList));","export const filterCourseUsers = (courses) => {  \r\n                  \r\nconst result = [];\r\nlet countcourse = -1;\r\nconst map = new Map();\r\n\r\nfor(const item of courses){         \r\n    \r\n    if(!map.has(item.courseid)){                                                                \r\n        map.set(item.courseid, true)\r\n        countcourse = countcourse + 1;   \r\n        result.push({\r\n            courseid: item.courseid,\r\n            fullname: item.fullname,                                               \r\n            profesor:[{\r\n                firstname: item.firstname,                   \r\n                lastname: item.lastname,  \r\n            }]\r\n        }) \r\n    }else{                                  \r\n        result[countcourse].profesor.push({\r\n            firstname: item.firstname,                   \r\n            lastname: item.lastname, \r\n        }) \r\n    }              \r\n}\r\n//console.log(\"result\")                \r\n    console.log(result)  \r\nreturn result    \r\n            \r\n};","import moment from 'moment';\r\n//obtiene datos del servidor, al ser llamado por un action creator\r\nexport const apiGet = (url) => () => fetch(url).then(v=>v.json());\r\n\r\n//obtiene los logs de moodle\r\nexport const getLogs = (urlLogs, idUser, idRol,idCourse) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{       \r\n       const usuario = [];                                                        \r\n       const mapUser = new Map();\r\n        let contUser = 0;\r\n        let countcourse = -1;\r\n       let count = 0;       \r\n       let first = 0;\r\n       let last = 0;\r\n       const map = new Map();\r\n           for(const item of logsJson){    \r\n               if(!mapUser.has(item.id_user+item.courseid)){                \r\n                mapUser.set(item.id_user+item.courseid,  true)   \r\n                count = 0                     \r\n                if(!map.has(item.id_user)){                                                                \r\n                    map.set(item.id_user, true)\r\n                    contUser = 0;\r\n                    countcourse = countcourse + 1;                         \r\n                    usuario.push({\r\n                        nombre: item.firstname+\" \"+item.apellido,\r\n                        courses:[{\r\n                            fullname: item.fullname,                     \r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }]\r\n                    })\r\n                    }else{                     \r\n                        contUser = contUser + 1;                \r\n                        usuario[countcourse].courses.push({\r\n                            fullname: item.fullname,\r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }) \r\n                    }  \r\n               }else{ \r\n                    count = count +1                              \r\n                    usuario[countcourse].courses[contUser].count = count+1         \r\n               }\r\n               //hace un ordenamiento de burbuja para obtener la ultima \r\n               //y primer fecha de entrada por cada curso\r\n               if(first > item.timecreated || first === 0 || usuario[countcourse].courses[contUser].first === 0){\r\n                   first =  item.timecreated\r\n                   usuario[countcourse].courses[contUser].first = item.timecreated\r\n               }\r\n               if(last  < item.timecreated || last === 0 || usuario[countcourse].courses[contUser].last === 0){\r\n                   last = item.timecreated\r\n                   usuario[countcourse].courses[contUser].last = item.timecreated\r\n               }\r\n           }            \r\n           return usuario                                           \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getSingleLogs = (urlLogs, idUser, idRol, idCourse, userName) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{   \r\n        if(idCourse == 0){                                                            \r\n        const result = [];\r\n        let count = 0;\r\n        let countcourse = -1;\r\n        let first = 0;\r\n        let last = 0;\r\n        let total = 0;\r\n        const map = new Map();\r\n            for(const item of logsJson){        \r\n                    //filtra los courses por su id \r\n                    \r\n                if(!map.has(item.courseid)){                                                                \r\n                    map.set(item.courseid, true)\r\n                    count = 0;\r\n                    item.timecreated != null ? total = total+1 : total = total+0;\r\n                    countcourse = countcourse + 1;\r\n                    //inserta en nuevo array courses con id diferente\r\n                    result.push({\r\n                        courseid: item.courseid,\r\n                        fullname: item.fullname,\r\n                        userid: item.userid,\r\n                        name: item.name,                       \r\n                        count: count +1,\r\n                        total: total,\r\n                        first: 0,\r\n                        last:0\r\n                    })                                \r\n                }else{\r\n                    //cada vez que detecta un id repetido\r\n                    //aumenta el contador, el cual indica la cantidad\r\n                    //total de actividad en el curso\r\n                    total = total+1;\r\n                    result[countcourse].total = total \r\n                    count = count + 1;                   \r\n                    result[countcourse].count = count+1                                \r\n                }\r\n                //hace un ordenamiento de burbuja para obtener la ultima \r\n                //y primer fecha de entrada por cada curso\r\n                if(first > item.timecreated || first === 0 || result[countcourse].first === 0){\r\n                    first =  item.timecreated\r\n                    result[countcourse].first = item.timecreated\r\n                }\r\n                if(last  < item.timecreated || last === 0 || result[countcourse].last === 0){\r\n                    last = item.timecreated\r\n                    result[countcourse].last = item.timecreated\r\n                }\r\n            } \r\n                        \r\n\r\n                \r\n                return result \r\n           }else{\r\n\r\n            const result = [];\r\n            let count = 0;\r\n            let countcourse = -1;\r\n            const map = new Map();\r\n                for(const item of logsJson){        \r\n                        //filtra los accesos del usuario por fecha                                          \r\n                    if(!map.has(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"))){                                                                \r\n                        map.set(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"), true)\r\n                        item.timecreated != null ? count = 1 : count = 0;\r\n                         countcourse = countcourse + 1;\r\n                        //inserta en nuevo array courses con fecha de diferencia\r\n                        result.push({\r\n                            timecreated: item.timecreated,              \r\n                            count: count\r\n                        })                                \r\n                    }else{\r\n                        //cada vez que detecta una fecha repetida\r\n                        //aumenta el contador, el cual indica la cantidad\r\n                        //total de actividad en el curso\r\n                        count = count + 1;                   \r\n                        result[countcourse].count = count                              \r\n                    }\r\n                } \r\n\r\n    \r\n              result.push({\r\n                courseName: logsJson[0].fullname,\r\n                userName\r\n              })  \r\n                console.log(\"logs logsJson\");\r\n                console.log(logsJson);\r\n                return result\r\n           }  \r\n           \r\n                                                  \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n \r\nexport const getCourses = (url) => {                \r\n    return fetch(`${url}`\r\n        ).then(courses => (courses.json()).then(coursesJson =>{   \r\n\r\n        return coursesJson    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getCourseUsers = (url,idCourse,type) => {                \r\n    return fetch(`${url}/${idCourse}/${type}`\r\n        ).then(users => (users.json()).then(usersJson =>{   \r\n            const result = [];\r\n            for(const item of usersJson){             \r\n                result.push(item.userid)            \r\n            }\r\n        return result    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\n","//url para obtener usuarioa\r\nconst urlBase = \"http://campus-virtuales.com/sigem/public/\"\r\nexport const urlUsuarios = `${urlBase}usuarios`;\r\nexport const urlDashbrdBasicInfo = `${urlBase}basicinfo`;\r\nexport const urlDashbrdCrseLogs = `${urlBase}courselogs`;\r\nexport const urlLogs = `${urlBase}logs`;\r\nexport const urlCourses = `${urlBase}courses`;\r\nexport const urlcourseUsers = `${urlBase}courseuser`;","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\n const styles = StyleSheet.create({\r\n    body: {\r\n      paddingTop: 35,\r\n      paddingBottom: 40.9,      \r\n      paddingHorizontal: 19,\r\n\r\n    },\r\n\r\n    content: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n    },\r\n    contentData: {\r\n      flexDirection: 'row',\r\n      backgroundColor: \"#ebe8e1\",\r\n      flexWrap: 'wrap',\r\n      border: '1 solid #3f4d67',\r\n      paddingBottom:5,\r\n    },\r\n    block: {\r\n      height: 30,\r\n      width: 94,\r\n    },\r\n    text: {\r\n      marginTop: 5,\r\n      textAlign: \"center\",\r\n      fontSize: 8,\r\n    },\r\n    textData: {\r\n      verticalAlign: \"baseline\",\r\n      marginTop:5,\r\n      borderBottom: '1px solid blue !important',\r\n      borderBottomWidth: \"5px\",\r\n      borderBottomStyle: \"solid\",\r\n    },\r\n    dataBlock: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n    },\r\n    dataBlockback: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n      backgroundColor:\"#d1cec6\",\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        height:56.5,\r\n    },\r\n\r\n    pageNumber: {\r\n      position: 'absolute',\r\n      fontSize: 6,\r\n      bottom: 30,\r\n      left: 0,\r\n      right: 0,\r\n      textAlign: 'center',\r\n      color: 'grey',\r\n    },\r\n\r\n\r\n  textTitle:{\r\n    fontSize: 10\r\n  },\r\n\r\n  });\r\n\r\n  export default styles;","module.exports = __webpack_public_path__ + \"static/media/concentrado_tutores.97fa793c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vasijas_final.b276690b.jpg\";"],"sourceRoot":""}