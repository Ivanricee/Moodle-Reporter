{"version":3,"sources":["App/components/UcFirst.js","actions/fetchUsuarios.js","actions/fillAlumnos.js","actions/fillProfesores.js","selectors/usuarios.js","App/components/pdf/styles.js","assets/images/pdf/concentrado_tutores.jpg","assets/images/pdf/vasijas_final.jpg","App/components/ProfesorList.js","App/components/pdf/ConcentradoUsuario.js","App/components/pdf/RegistroUsuario.js","App/containers/Profesor/index.js","api/index.js","api/url.js"],"names":["UcFirst","string","this","props","text","charAt","toUpperCase","slice","React","Component","__webpack_require__","d","__webpack_exports__","fetchUsuarios","_constants__WEBPACK_IMPORTED_MODULE_0__","redux_actions__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_api_url__WEBPACK_IMPORTED_MODULE_3__","createAction","FETCH_USUARIOS","apiGet","urlUsuarios","GET_PROFESORES","GET_ALUMNOS","fillAlumnos","fillProfesores","getUsuarios","getAlumnos","getProfesores","state","usuarios","alumnos","profesores","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","content","flexDirection","flexWrap","contentData","backgroundColor","border","block","height","width","marginTop","textAlign","fontSize","textData","verticalAlign","borderBottom","borderBottomWidth","borderBottomStyle","dataBlock","dataBlockback","image","pageNumber","position","bottom","left","right","color","textTitle","module","exports","p","ConcentradoUsuario","_this","Object","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","profesor","profesorCourses","info","totalIngresos","courses","map","prof","index","last","count","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_react_pdf_renderer__WEBPACK_IMPORTED_MODULE_6__","style","fullname","first","moment","unix","format","fontWwight","length","concat","parseInt","_this2","logs","console","log","total","className","size","src","concentrado_profesores","tot","showCourses","nombre","paddingLeft","paddingRight","render","_ref","totalPages","fixed","RegistroUsuario","userName","courseName","timecreated","Profesor","closePDFmodal","setState","totalLogsState","pdfLogs","open","handleDataChange","dataSize","profesorCount","logsState","userType","idCurso","idUsuario","getLogs","urlLogs","then","result","getSingleLogs","alumnosUsers","filter","alumno","roleid","profesoresUsers","_this3","columns","dataField","headerFormatter","column","colIndex","formatter","cell","row","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","xs","avatar2","alt","lastname","firstname","lastaccess","align","classes","fullUserName","expandRow","onlyOneExpanding","showExpandColumn","expandColumnPosition","parentClassName","onExpand","isExpand","rowIndex","e","id","renderer","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","arr","sm","md","span","offset","key","courseid","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","Body","name","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","variant","onClick","openPDFmodal","userid","disabled","_App_components_UcFirst__WEBPACK_IMPORTED_MODULE_13__","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_24___default","keyField","onDataSizeChange","data","condensed","bordered","pagination","paginationFactory","noDataIndication","filterFactory","_this4","_hoc_Aux__WEBPACK_IMPORTED_MODULE_14__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","show","onHide","dialogClassName","Header","closeButton","Title","_components_pdf_ConcentradoUsuario__WEBPACK_IMPORTED_MODULE_30__","_components_pdf_RegistroUsuario__WEBPACK_IMPORTED_MODULE_31__","class","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","animation","Footer","xl","showProfesores","withRouter","connect","dispatch","getCourses","getCourseUsers","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","url","fetch","v","json","idUser","idRol","idCourse","logsJson","usuario","mapUser","Map","contUser","countcourse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","has","id_user","set","push","apellido","err","return","catch","error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","coursesJson","users","usersJson","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","urlCourses","urlcourseUsers","urlBase"],"mappings":"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","file":"static/js/13.a57ba3e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\nexport const fetchUsuarios = createAction ( FETCH_USUARIOS, apiGet(urlUsuarios) );\r\nexport const getProfesores = createAction(GET_PROFESORES);\r\nexport const getAlumnos = createAction(GET_ALUMNOS);\r\n","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\n//export const getAlumnos = createAction(GET_ALUMNOS, apiGet(urlUsuarios));\r\nexport const fillAlumnos = createAction(GET_ALUMNOS);\r\n","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\n//export const getProfesores = createAction(GET_PROFESORES, apiGet(urlUsuarios));\r\nexport const fillProfesores = createAction(GET_PROFESORES);\r\n\r\n","export const getUsuarios = state => state.usuarios;\r\nexport const getAlumnos = state => state.alumnos;\r\nexport const getProfesores = state => state.profesores;","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\n const styles = StyleSheet.create({\r\n    body: {\r\n      paddingTop: 35,\r\n      paddingBottom: 40.9,      \r\n      paddingHorizontal: 19,\r\n\r\n    },\r\n\r\n    content: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n    },\r\n    contentData: {\r\n      flexDirection: 'row',\r\n      backgroundColor: \"#ebe8e1\",\r\n      flexWrap: 'wrap',\r\n      border: '1 solid #3f4d67',\r\n      paddingBottom:5,\r\n    },\r\n    block: {\r\n      height: 30,\r\n      width: 94,\r\n    },\r\n    text: {\r\n      marginTop: 5,\r\n      textAlign: \"center\",\r\n      fontSize: 8,\r\n    },\r\n    textData: {\r\n      verticalAlign: \"baseline\",\r\n      marginTop:5,\r\n      borderBottom: '1px solid blue !important',\r\n      borderBottomWidth: \"5px\",\r\n      borderBottomStyle: \"solid\",\r\n    },\r\n    dataBlock: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n    },\r\n    dataBlockback: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n      backgroundColor:\"#d1cec6\",\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        height:56.5,\r\n    },\r\n\r\n    pageNumber: {\r\n      position: 'absolute',\r\n      fontSize: 6,\r\n      bottom: 30,\r\n      left: 0,\r\n      right: 0,\r\n      textAlign: 'center',\r\n      color: 'grey',\r\n    },\r\n\r\n\r\n  textTitle:{\r\n    fontSize: 10\r\n  },\r\n\r\n  });\r\n\r\n  export default styles;","module.exports = __webpack_public_path__ + \"static/media/concentrado_tutores.97fa793c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vasijas_final.b276690b.jpg\";","import React from 'react';\r\nimport {Row, Col, Card, Table, Tabs, Tab} from 'react-bootstrap';\r\n\r\nimport Aux from \"./../../hoc/_Aux\";\r\nimport DEMO from \"./../../store/constant\";\r\n\r\nimport avatar1 from './../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from './../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from './../../assets/images/user/avatar-3.jpg';\r\n\r\n\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\nclass ProfesorList extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            profesor: [],\r\n        };\r\n      }\r\n    render() {\r\n        const { profesor } = this.props;\r\n        return (\r\n            <tr className=\"unread\">\r\n                <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar1} alt=\"activity-user\"/></td>\r\n                <td>\r\n                    <h6 className=\"mb-1\">{profesor.firstname+\" \"+profesor.lastname}</h6>\r\n                    <p className=\"m-0\">{profesor.email}</p>\r\n                </td>\r\n                <td>\r\n                <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>11 MAY 12:56</h6>\r\n                </td>\r\n                <td><a href={DEMO.BLANK_LINK} className=\"label theme-bg2 text-white f-12\">Detalles</a></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfesorList;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass ConcentradoUsuario extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            profesor: \"\",\r\n        };\r\n      }\r\n      \r\n      showCourses(profesorCourses, info){\r\n        let totalIngresos = 0;\r\n        return profesorCourses.courses.map(          \r\n          (prof,index) => {\r\n\r\n            prof.last != null ? totalIngresos = totalIngresos + prof.count : totalIngresos = totalIngresos + 0\r\n\r\n            if(info == \"nombre\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {index+1+\") \"+prof.fullname+ \"\\n\" }\r\n                    </Text>\r\n            }else if(info == \"first\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {prof.first != null ?\r\n                      moment.unix(prof.first).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }\r\n                      \r\n                    </Text>\r\n            }else if(info == \"last\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {prof.last != null ?\r\n                      moment.unix(prof.last).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }\r\n                    </Text>\r\n            }else if(info == \"count\"){\r\n                                                    \r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"center\",fontWwight: \"bold\" } ]}>\r\n                      {prof.last != null ?\r\n                        prof.count+\"\\n\" :\r\n                        \"0\\n\" }\r\n                        <Text style={[styles.textData, {fontSize: 6,textAlign: \"center\",fontWwight: \"bold\" } ]}>\r\n                                    {index+1 == profesorCourses.courses.length ?\r\n                                     `Total: ${totalIngresos}` : \"\"}\r\n                        </Text>\r\n                    </Text>                    \r\n            }else if(info == \"total\"){\r\n              return parseInt(totalIngresos)\r\n            }    \r\n             \r\n          })        \r\n      }\r\n      \r\n\r\n    render() {\r\n        const { logs } = this.props;\r\n        console.log(\"logs\");\r\n        console.log(logs);\r\n        let total = 0;\r\n        console.log(logs);\r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n          <Page size=\"A4\"  style={styles.body}  >\r\n          <Image style={styles.image} src={concentrado_profesores}  />\r\n          <View style={styles.contentData}>\r\n            <View style={[{fontSize: 7,width: 40,}]} >\r\n             <Text style={styles.text}>No.</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90,}]} >\r\n             <Text style={styles.text}>NOMBRE DEL TUTOR</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 160,}]} >\r\n             <Text style={styles.text}>CURSO/MATERIA</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 80,}]} >\r\n             <Text style={styles.text}>PRIMER INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90, }]} >\r\n             <Text style={styles.text}>ÚLTIMO INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90, }]} >\r\n             <Text style={styles.text}>TOTAL ACCESOS</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.content}>\r\n              \r\n              {\r\n                \r\n                logs.map(\r\n                (profesor,index) => {\r\n                  // console.log(\"showCourses\")\r\n                  //console.log(this.showCourses(student.enrolledcourses, student.fullname, \"curso\"))\r\n                  // let heig = 25 * student.enrolledcourses[0].length;\r\n                  let heig = 76.5;\r\n                  let size = 8;\r\n                  let tot = this.showCourses(profesor,\"total\")\r\n                  total = total + tot[profesor.courses.length-1];\r\n\r\n                  \r\n                  \r\n                  return (<View style={ index%2 == 0 ?  [styles.dataBlock,{height: heig}]  :  [styles.dataBlockback,{height: heig}]      } >\r\n                      <View style={[styles.textData,{fontSize: 7,width: 40}]} >\r\n                      <Text style={styles.text}>{index+1}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{width: 98,textAlign: \"left !important\"}]} >\r\n                      <Text style={[styles.text,{fontSize: 8 }]}>{profesor.nombre}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 160,paddingLeft: 7, paddingRight:7}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"nombre\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 80,paddingLeft:10}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"first\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 90,paddingLeft:18}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"last\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 88,}]} >\r\n                        <Text style={styles.text}>{this.showCourses(profesor,\"count\")}                        \r\n                        </Text>\r\n                        <Text style={styles.text}>{index+1 == logs.length ? `Total: ${total}` : \"\"}</Text>  \r\n                      </View>                  \r\n                    </View>)\r\n                  })\r\n              }\r\n              </View>\r\n              <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\r\n                          `${pageNumber} / ${totalPages}`\r\n                        )} fixed />\r\n\r\n          </Page>\r\n        </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ConcentradoUsuario;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass RegistroUsuario extends React.Component {\r\n         \r\n    render() {\r\n        const { logs } = this.props;        \r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n            <Page size=\"A4\"  style={styles.body} >\r\n            <Image style={styles.image} src={concentrado_profesores}  />\r\n            \r\n            <Text style={styles.textTitle}>Tutor: {logs[logs.length-1].userName}</Text>\r\n            <Text style={styles.textTitle}>Curso:  {logs[logs.length-1].courseName}</Text>\r\n            <View style={styles.contentData}>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n\r\n            </View>\r\n            <View style={styles.content}>\r\n                    {\r\n                      logs.map(\r\n                        (log,index) => {\r\n                          if(index != logs.length-1 ){\r\n                            return (                                                                                \r\n                            <View style={[styles.dataBlock,{height: 30,}]} >\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? moment.unix(log.timecreated).format(\"LL\") : \"Sin Actividad\" }</Text>\r\n                              </View>\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? `${log.count} veces` : \"0\" } \r\n                                </Text>\r\n                              </View>\r\n                            </View>                                                                                        \r\n                            );                          \r\n                          }\r\n                        })\r\n                      }\r\n            </View>\r\n\r\n            </Page>\r\n   </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\nexport default RegistroUsuario;\r\n","import React from 'react';\r\nimport {Row, Col, Card, Container, Button, Modal,Spinner} from 'react-bootstrap';\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { connect } from 'react-redux';\r\n//action creator:\r\nimport { fetchUsuarios } from '../../../actions/fetchUsuarios';\r\nimport { fillAlumnos } from '../../../actions/fillAlumnos';\r\nimport { fillProfesores } from '../../../actions/fillProfesores';\r\n//component list\r\nimport  ProfesorList  from '../../components/ProfesorList';\r\nimport { getUsuarios,getAlumnos,getProfesores } from '../../../selectors/usuarios';\r\n//creador de tablas\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n//info para logs\r\nimport { getLogs,getSingleLogs } from './../../../api'\r\nimport { urlLogs } from './../../../api/url';\r\n\r\n//import pdf component\r\nimport ConcentradoUsuario from './../../components/pdf/ConcentradoUsuario';\r\nimport RegistroUsuario from '../../components/pdf/RegistroUsuario';\r\n\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\n\r\nclass Profesor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          //obtiene la consulta que hace el fetch getLogs()  \r\n          open: false,\r\n          logsState:[],\r\n          totalLogsState:[],\r\n          pdfLogs:[],\r\n          profesorCount:0,\r\n          userType:3,\r\n        };\r\n      }\r\n    openPDFmodal(idCurso, idUsuario, userName){\r\n        this.setState({ open: true });\r\n        //get and set all users fetch data logs\r\n        if(idCurso == 0){\r\n            const logs =  getLogs(urlLogs, 0, this.state.userType)   \r\n                logs.then((result) => (this.setState({ totalLogsState: result}) ))   \r\n\r\n        }else{\r\n            const logs =  getSingleLogs(urlLogs, idUsuario, this.state.userType, idCurso, userName)   \r\n                logs.then((result) => (this.setState({ pdfLogs: result}) ))   \r\n        }    \r\n    };\r\n\r\n    closePDFmodal = () => {\r\n\r\n        this.setState({ totalLogsState: []})\r\n        this.setState({ pdfLogs: []})\r\n        \r\n        this.setState({ open: false });                \r\n    };\r\n    componentDidMount(){\r\n        //hace el fetch de usuarios, y crea 3 variables globales\r\n        if(this.props.usuarios.length == 0){\r\n            this.props.fetchUsuarios()                    \r\n        }            \r\n        if(this.props.usuarios.length > 0 && !this.props.alumnos[0]){\r\n            this.props.fillAlumnos(); \r\n            this.props.fillProfesores();             \r\n        }\r\n        if(this.props.profesores[0]){\r\n            this.setState({ profesorCount: this.props.profesores[0].length });    \r\n        }\r\n    }    \r\n    componentDidUpdate(){\r\n        //filtra los usuarios y actualiza\r\n        // 2 variables globales con los filtros\r\n        if(this.props.usuarios.length > 0){\r\n            const alumnosUsers = this.props.usuarios.filter(alumno => alumno.roleid === \"5\");\r\n            const profesoresUsers = this.props.usuarios.filter(alumno => alumno.roleid === \"3\");                                       \r\n            if(!this.props.alumnos[0] && !this.props.alumnos[0]){\r\n                this.props.fillAlumnos(alumnosUsers);  \r\n                this.props.fillProfesores(profesoresUsers);  \r\n                this.setState({ profesorCount: profesoresUsers.length });                \r\n            }          \r\n        }\r\n    }\r\n\r\n    handleDataChange = ({ dataSize }) => {\r\n        this.setState({ profesorCount: dataSize });\r\n        console.log(this.state.profesorCount);\r\n    }\r\n    showProfesores(){   \r\n        //formato de cada row de usuario profesor/alumno    \r\n         \r\n        function textFormatter(cell, row) {\r\n            return (\r\n            <Row>\r\n                <Col xs=\"1\"><img className=\"rounded-circle\" style={{width: '30px'}} src={avatar2} alt=\"Profesor\"/></Col>\r\n                <Col><strong>{`${row.lastname} `}</strong>{ row.firstname }</Col>         \r\n                <Col className=\"format-expanse-user\"><h5>Último Acceso a moodle:</h5><h6 className=\"row-text-bt\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>\r\n                     {  row.lastaccess.length >=  2 ?\r\n                        moment.unix(row.lastaccess).format(\"LL\"):\r\n                        \"Sin actividad\"} </h6>\r\n                </Col>       \r\n\r\n            </Row>\r\n            );          \r\n        }\r\n        function tituloFormat(column, colIndex) {\r\n            return (\r\n              <h5 className=\"card-title headerbtable col-xs-12 col-md-6 col-lg-4\">.</h5>\r\n            );\r\n          }\r\n        //creacion y formato de las columnas de la tabla\r\n        //con collapse\r\n        const columns = [{\r\n            dataField: 'firstname',\r\n            text: ' ',\r\n            headerFormatter: tituloFormat,\r\n            formatter: textFormatter,\r\n            align: 'left',\r\n            classes: 'columnbtable',\r\n            fullUserName: \"\",\r\n          }];\r\n\r\n          const expandRow = {\r\n            onlyOneExpanding: true,\r\n            showExpandColumn: false,\r\n            expandColumnPosition: 'right',\r\n            parentClassName: 'parent-expand-foo',            \r\n            onExpand: (row, isExpand, rowIndex, e) => {                                \r\n                const { logsState } = this.state;      \r\n                const { fullUserName } = this.state;      \r\n                const fullname = `${row.firstname} ${row.lastname}`\r\n               \r\n                //si el collapse esta expandido obtiene info de ese usuario \r\n                if(isExpand === true){ \r\n                    //llama una function que obtiene y filtra los logs, \r\n                    //después lo agrega a una variable global de esta clase\r\n                   \r\n                   const logs =  getSingleLogs(urlLogs, row.id,3,0,\"\",\"\")   \r\n                   logs.then((result) => (this.setState({ logsState: result, fullUserName : fullname})  ))                                                       \r\n                }                 \r\n\r\n            },\r\n            //hace el render dentro de cada usuario profesor/alumno\r\n            renderer: row => (\r\n                <Container > \r\n                    {this.state.logsState.map(function(log,index, arr){                        \r\n                        if(arr.length-1 == index){\r\n                            return <Row className=\"justify-content-md-center\"><Col className=\"total-registros\" xs={6} sm={6} md={4}>                         \r\n                                    <h3><strong>{`${log.total} `}</strong>Registros de actividad</h3>\r\n                                    </Col>\r\n\r\n                                    {log.total == 0 ?\r\n                                    <Col className=\"total-registros\" xs={6} sm={6} md={{ span: 1, offset: 1 }}><h3>Inactivo</h3></Col> :\r\n                                    <Col className=\"total-registros\" xs={6} sm={6} md={{ span: 1, offset: 1 }}><h3>Activo</h3></Col>\r\n                                    }\r\n                                    \r\n                                   </Row>  \r\n                        }\r\n\r\n                    })}\r\n\r\n                    <Row  className=\"justify-content-sm-center\">                                                            \r\n                    {this.state.logsState.map(log =>   \r\n                    <Col xs={12} sm={6} md={4} key={log.courseid} >                       \r\n                        <Card key={`${log.courseid}cardus`} className=\"log-user-card\">\r\n                            <Card.Body key={`${log.courseid}cardbody`}>\r\n                                <Row>\r\n                                  <Col className=\"log-count\">                                      \r\n                                      \r\n                                      <p key={`${log.courseid}pcount`}>{log.first !== null ? log.count : 0}</p>\r\n                                      <p className=\"log-count-title\" key={`${log.courseid}pcount-tit`}>INTERACCIONES</p>                                      \r\n                                  </Col>\r\n                                  <Col className=\"log-date\">\r\n                                    <Col className=\"title-date\">\r\n                                        <h6  key={`${log.courseid}pfatitle`}>Primer</h6>\r\n                                        <p key={`${log.courseid}pfa`}>{ log.first != null ?\r\n                                            moment.unix(log.first).format(\"LL\"):\r\n                                            \"Sin actividad\"}\r\n                                        </p>\r\n                                    </Col>\r\n                                    <Col className=\"title-date\">\r\n                                        <h6  key={`${log.courseid}platitle`}>Último</h6>\r\n                                        <p key={`${log.courseid}pfa`}>{ log.last != null ?\r\n                                            moment.unix(log.last).format(\"LL\"):\r\n                                            \"Sin actividad\"}\r\n                                        </p>\r\n                                    </Col>\r\n                                  </Col>\r\n                                </Row>                           \r\n                                <hr/>       \r\n                                <Row className=\"log-course-catg\">                                    \r\n                                    <Col xs=\"12\"  key={`${log.courseid}pcateg`} ><span>DIPLOMADO: </span>{log.name}</Col>\r\n                                    <Col xs=\"12\"  key={`${log.courseid}pfnam`}><span>CURSO: </span>{log.fullname}</Col>\r\n                                    <Col xs=\"12\" className=\"log-pdf\">\r\n                                    <Button variant={'outline-secondary'}  \r\n                                            size=\"sm\" \r\n                                            block\r\n                                            onClick={()=>this.openPDFmodal(log.courseid,log.userid, this.state.fullUserName)} \r\n                                            disabled={this.state.open}><UcFirst text=\"PDF\" /></Button>\r\n                                    </Col>\r\n                                </Row>                                \r\n                            </Card.Body>                            \r\n                        </Card>                        \r\n                    </Col>     \r\n                    )}\r\n                    </Row>\r\n                </Container>\r\n\r\n              \r\n            )\r\n          };\r\n        //listado de profesores viene de redux en el actionCreator fetchProfesores        \r\n        if(this.props.profesores[0]){\r\n           return  (    \r\n            <Row>\r\n                <Col xs=\"12\">\r\n                <BootstrapTable \r\n                    keyField='id'\r\n                    onDataSizeChange={ this.handleDataChange }\r\n                    data={ this.props.profesores[0]}\r\n                    columns={ columns }\r\n                    condensed\r\n                    expandRow={ expandRow }\r\n                    bordered={ false }\r\n                    pagination={ paginationFactory()}\r\n                    noDataIndication=\"No hay profesores\"\r\n                    filter={ filterFactory() \r\n                    }/>\r\n                </Col>\r\n            </Row>                                          \r\n\r\n           )\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {   \r\n    \r\n        return (\r\n   \r\n            <Aux >\r\n                <Modal show={this.state.open} onHide={this.closePDFmodal}\r\n                       dialogClassName=\"modal-pdf\">\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Concentrado de profesores</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {\r\n                            this.state.totalLogsState.length > 0 ? <ConcentradoUsuario logs={this.state.totalLogsState}></ConcentradoUsuario> :                                                 \r\n                            this.state.pdfLogs.length > 0 ? <RegistroUsuario logs={this.state.pdfLogs}></RegistroUsuario> : \r\n                            <Row className=\"justify-content-md-center\"><Col xs=\"12\" class=\"spinner_col\"><Spinner animation=\"grow\" variant=\"info\" />Cargando...</Col></Row>\r\n                        }   \r\n        \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closePDFmodal}>\r\n                        Cerrar\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Row className=\"header-container\">                  \r\n                    <Col  xs=\"6\" sm=\"3\" className=\"header-new-format\">PROFESORES </Col>\r\n                    <Col   xs=\"2\" sm=\"1\"  className=\"header-count\">{this.state.profesorCount}</Col>\r\n                    \r\n                    <Col><Button variant={'outline-primary'}  \r\n                            onClick={()=>this.openPDFmodal(0,0,\"\")} \r\n                            disabled={this.state.open}>\r\n                            <UcFirst text=\"PDF\" /></Button>\r\n                    </Col>\r\n                \r\n                </Row>\r\n                <Row> \r\n                </Row>                \r\n                <Row >                                       \r\n                    <Col md={12} xl={12}>                        \r\n                        <Card >\r\n                            <Card.Body className='px-0 py-2' >\r\n                                {\r\n                                    this.showProfesores()\r\n                                }\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>                                                                                        \r\n                </Row>\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\n//simplificado\r\n//const mapDispatchToProps = { fetchProfesores }\r\n\r\n//No simplificado\r\n//hace el dispatch de los usuarios alumnos/profesores\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsuarios: () => dispatch(fetchUsuarios()),\r\n        fillAlumnos: (alumnos) => dispatch(fillAlumnos(alumnos)),\r\n        fillProfesores: (profesores) => dispatch(fillProfesores(profesores)),\r\n    }\r\n};\r\n\r\n//hace posible que se puedan user las variables de redux\r\nconst mapStateToProps = state => ({\r\n    usuarios: getUsuarios(state),\r\n    alumnos: getAlumnos(state),\r\n    profesores: getProfesores(state),\r\n});\r\n\r\n\r\n//connect(props variable,props.functions reducers);\r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps )(Profesor));","import moment from 'moment';\r\n//obtiene datos del servidor, al ser llamado por un action creator\r\nexport const apiGet = (url) => () => fetch(url).then(v=>v.json());\r\n\r\n//obtiene los logs de moodle\r\nexport const getLogs = (urlLogs, idUser, idRol,idCourse) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{       \r\n       const usuario = [];                                                        \r\n       const mapUser = new Map();\r\n        let contUser = 0;\r\n        let countcourse = -1;\r\n       let count = 0;       \r\n       let first = 0;\r\n       let last = 0;\r\n       const map = new Map();\r\n           for(const item of logsJson){    \r\n               if(!mapUser.has(item.id_user+item.courseid)){                \r\n                mapUser.set(item.id_user+item.courseid,  true)   \r\n                count = 0                     \r\n                if(!map.has(item.id_user)){                                                                \r\n                    map.set(item.id_user, true)\r\n                    contUser = 0;\r\n                    countcourse = countcourse + 1;                         \r\n                    usuario.push({\r\n                        nombre: item.firstname+\" \"+item.apellido,\r\n                        courses:[{\r\n                            fullname: item.fullname,                     \r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }]\r\n                    })\r\n                    }else{                     \r\n                        contUser = contUser + 1;                \r\n                        usuario[countcourse].courses.push({\r\n                            fullname: item.fullname,\r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }) \r\n                    }  \r\n               }else{ \r\n                    count = count +1                              \r\n                    usuario[countcourse].courses[contUser].count = count+1         \r\n               }\r\n               //hace un ordenamiento de burbuja para obtener la ultima \r\n               //y primer fecha de entrada por cada curso\r\n               if(first > item.timecreated || first === 0 || usuario[countcourse].courses[contUser].first === 0){\r\n                   first =  item.timecreated\r\n                   usuario[countcourse].courses[contUser].first = item.timecreated\r\n               }\r\n               if(last  < item.timecreated || last === 0 || usuario[countcourse].courses[contUser].last === 0){\r\n                   last = item.timecreated\r\n                   usuario[countcourse].courses[contUser].last = item.timecreated\r\n               }\r\n           }            \r\n           return usuario                                           \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getSingleLogs = (urlLogs, idUser, idRol, idCourse, userName) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{   \r\n        if(idCourse == 0){                                                            \r\n        const result = [];\r\n        let count = 0;\r\n        let countcourse = -1;\r\n        let first = 0;\r\n        let last = 0;\r\n        let total = 0;\r\n        const map = new Map();\r\n            for(const item of logsJson){        \r\n                    //filtra los courses por su id \r\n                    \r\n                if(!map.has(item.courseid)){                                                                \r\n                    map.set(item.courseid, true)\r\n                    count = 0;\r\n                    item.timecreated != null ? total = total+1 : total = total+0;\r\n                    countcourse = countcourse + 1;\r\n                    //inserta en nuevo array courses con id diferente\r\n                    result.push({\r\n                        courseid: item.courseid,\r\n                        fullname: item.fullname,\r\n                        userid: item.userid,\r\n                        name: item.name,                       \r\n                        count: count +1,\r\n                        total: total,\r\n                        first: 0,\r\n                        last:0\r\n                    })                                \r\n                }else{\r\n                    //cada vez que detecta un id repetido\r\n                    //aumenta el contador, el cual indica la cantidad\r\n                    //total de actividad en el curso\r\n                    total = total+1;\r\n                    result[countcourse].total = total \r\n                    count = count + 1;                   \r\n                    result[countcourse].count = count+1                                \r\n                }\r\n                //hace un ordenamiento de burbuja para obtener la ultima \r\n                //y primer fecha de entrada por cada curso\r\n                if(first > item.timecreated || first === 0 || result[countcourse].first === 0){\r\n                    first =  item.timecreated\r\n                    result[countcourse].first = item.timecreated\r\n                }\r\n                if(last  < item.timecreated || last === 0 || result[countcourse].last === 0){\r\n                    last = item.timecreated\r\n                    result[countcourse].last = item.timecreated\r\n                }\r\n            } \r\n                        \r\n\r\n                \r\n                return result \r\n           }else{\r\n\r\n            const result = [];\r\n            let count = 0;\r\n            let countcourse = -1;\r\n            const map = new Map();\r\n                for(const item of logsJson){        \r\n                        //filtra los accesos del usuario por fecha                                          \r\n                    if(!map.has(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"))){                                                                \r\n                        map.set(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"), true)\r\n                        item.timecreated != null ? count = 1 : count = 0;\r\n                         countcourse = countcourse + 1;\r\n                        //inserta en nuevo array courses con fecha de diferencia\r\n                        result.push({\r\n                            timecreated: item.timecreated,              \r\n                            count: count\r\n                        })                                \r\n                    }else{\r\n                        //cada vez que detecta una fecha repetida\r\n                        //aumenta el contador, el cual indica la cantidad\r\n                        //total de actividad en el curso\r\n                        count = count + 1;                   \r\n                        result[countcourse].count = count                              \r\n                    }\r\n                } \r\n\r\n    \r\n              result.push({\r\n                courseName: logsJson[0].fullname,\r\n                userName\r\n              })  \r\n                console.log(\"logs logsJson\");\r\n                console.log(logsJson);\r\n                return result\r\n           }  \r\n           \r\n                                                  \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n \r\nexport const getCourses = (url) => {                \r\n    return fetch(`${url}`\r\n        ).then(courses => (courses.json()).then(coursesJson =>{   \r\n\r\n        return coursesJson    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getCourseUsers = (url,idCourse) => {                \r\n    return fetch(`${url}/${idCourse}`\r\n        ).then(users => (users.json()).then(usersJson =>{   \r\n            const result = [];\r\n            for(const item of usersJson){             \r\n                result.push(item.userid)            \r\n            }\r\n        return result    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\n","//url para obtener usuarioa\r\nconst urlBase = \"http://campus-virtuales.com/sigem/public/\"\r\nexport const urlUsuarios = `${urlBase}usuarios`;\r\nexport const urlLogs = `${urlBase}logs`;\r\nexport const urlCourses = `${urlBase}courses`;\r\nexport const urlcourseUsers = `${urlBase}courseuser`;"],"sourceRoot":""}