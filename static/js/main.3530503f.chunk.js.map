{"version":3,"sources":["constants/index.js","config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","reducers/usuarios.js","reducers/alumnos.js","reducers/profesores.js","store/menuReducer.js","reducers/index.js","store/index.js","index.js","store/actions.js"],"names":["__webpack_require__","d","__webpack_exports__","FETCH_USUARIOS","GET_PROFESORES","GET_ALUMNOS","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","loader","a","createElement","className","Aux","props","children","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","withRouter","route","path","exact","name","component","lazy","Promise","all","e","then","bind","AdminLayout","Loadable","loading","Loader","App","renderHome","react_default","menu","routes","map","index","Route","key","render","_Aux","layout_ScrollToTop","react","fallback","Switch","Boolean","hostname","match","usuarios","handleActions","Object","defineProperty","state","action","toConsumableArray","payload","alumnos","profesores","initialState","objectSpread","isOpen","isTrigger","config","isFullScreen","menuReducer","arguments","length","undefined","trigger","open","type","actionTypes","triggerIndex","indexOf","id","filter","item","concat","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","promiseMiddleware","app","es","BrowserRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE"],"mappings":"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","file":"static/js/main.3530503f.chunk.js","sourcesContent":["export const FETCH_USUARIOS = 'FETCH_USUARIOS';\r\nexport const GET_PROFESORES = 'GET_PROFESORES';\r\nexport const GET_ALUMNOS = 'GET_ALUMNOS';","export default {\r\n    defaultPath: '/dashboard',\r\n    basename: '/sigem', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-ligh', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n};\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst SignUp1 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp1'));\r\nconst Signin1 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn1'));\r\n\r\nconst route = [\r\n    { path: '/auth/signup-1', exact: true, name: 'Signup 1', component: SignUp1 },\r\n    { path: '/auth/signin-1', exact: true, name: 'Signin 1', component: Signin1 }\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    renderHome = () => <h1>Homee</h1>;\n    render() {\n        const menu = routes.map((route, index) => {\n          return (route.component) ? (\n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n          ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>                                             \n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\r\nimport { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants/index';\r\n\r\n//export const profesores = handleActions(FETCH_PROFESORES, (state, action) => [...action.payload],[]);\r\nexport const usuarios = handleActions({\r\n    [FETCH_USUARIOS]: (state, action) => [...action.payload]\r\n},[])\r\n\r\n\r\n\r\n","import { handleActions, handleAction } from 'redux-actions';\r\nimport { GET_ALUMNOS } from '../constants/index';\r\n\r\n\r\nexport const alumnos = handleActions({\r\n    [GET_ALUMNOS]: (state, action) => [action.payload]\r\n},[])\r\n\r\n","import { handleActions } from 'redux-actions';\r\nimport { GET_PROFESORES  } from '../constants/index';\r\n\r\n//export const profesores = handleActions(FETCH_PROFESORES, (state, action) => [...action.payload],[]);\r\n//anterior forma\r\n/*export const profesores = handleAction(\r\n    GET_ALUMNOS,\r\n    (state, action) =>({\r\n        val: action.payload\r\n    }),\r\n    {val:0}\r\n);*/\r\n\r\nexport const profesores = handleActions({\r\n    [GET_PROFESORES]: (state, action) => [action.payload]\r\n},[])\r\n\r\n","import * as actionTypes from './actions';\r\nimport config from '../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst menuReducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default menuReducer;","import { combineReducers } from 'redux';\r\nimport { usuarios } from './usuarios';\r\nimport { alumnos } from './alumnos';\r\nimport { profesores } from './profesores';\r\nimport menuReducer from './../store/menuReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    menuReducer,\r\n    usuarios,\r\n    alumnos,\r\n    profesores\r\n})\r\n","import  { createStore, compose, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport reducer from './../reducers';\r\nimport config from '../config';\r\n\r\nconst initialState = {\r\n    menuReducer: {isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false,} // static can't change\r\n};\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n//recibe reducers\r\nexport const store = createStore(reducer, initialState,\r\n    composeEnhancers(applyMiddleware(promiseMiddleware)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\n//import reducer from './store/reducer'; //obtiene los reducers originalmente\nimport { store } from './store';\nimport config from './config';\n//const store = createStore(reducer); //antigua llamada\n\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            {/* basename=\"/datta-able\" */}\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';"],"sourceRoot":""}