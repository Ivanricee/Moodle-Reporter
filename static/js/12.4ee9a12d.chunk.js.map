{"version":3,"sources":["App/components/UcFirst.js","actions/fetchUsuarios.js","actions/fillAlumnos.js","actions/fillProfesores.js","selectors/usuarios.js","App/components/pdf/styles.js","assets/images/pdf/concentrado_tutores.jpg","assets/images/pdf/vasijas_final.jpg","App/components/ProfesorList.js","App/components/pdf/ConcentradoUsuario.js","App/components/pdf/RegistroUsuario.js","App/containers/Alumnos/index.js","api/index.js","api/url.js"],"names":["UcFirst","string","this","props","text","charAt","toUpperCase","slice","React","Component","__webpack_require__","d","__webpack_exports__","fetchUsuarios","_constants__WEBPACK_IMPORTED_MODULE_0__","redux_actions__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_api_url__WEBPACK_IMPORTED_MODULE_3__","createAction","FETCH_USUARIOS","apiGet","urlUsuarios","GET_PROFESORES","GET_ALUMNOS","fillAlumnos","fillProfesores","getUsuarios","getAlumnos","getProfesores","state","usuarios","alumnos","profesores","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","content","flexDirection","flexWrap","contentData","backgroundColor","border","block","height","width","marginTop","textAlign","fontSize","textData","verticalAlign","borderBottom","borderBottomWidth","borderBottomStyle","dataBlock","dataBlockback","image","pageNumber","position","bottom","left","right","color","textTitle","module","exports","p","ConcentradoUsuario","_this","Object","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","profesor","profesorCourses","info","totalIngresos","courses","map","prof","index","last","count","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_react_pdf_renderer__WEBPACK_IMPORTED_MODULE_6__","style","fullname","first","moment","unix","format","fontWwight","length","concat","parseInt","_this2","logs","console","log","total","className","size","src","concentrado_profesores","tot","showCourses","nombre","paddingLeft","paddingRight","render","_ref","totalPages","fixed","RegistroUsuario","userName","courseName","timecreated","Alumnos","closePDFmodal","setState","totalLogsState","pdfLogs","open","getCourseUser","event","target","value","getCourseUsers","urlcourseUsers","then","userCoursesRes","userCourses","handleDataChange","dataSize","userCount","logsState","userType","qualityFilter","idCurso","idUsuario","getLogs","urlLogs","result","getSingleLogs","_this3","getCourses","urlCourses","coursesRes","alumnosUsers","filter","alumno","roleid","profesoresUsers","_this4","MyExportCSV","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","xs","sm","md","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","variant","onClick","openPDFmodal","disabled","_App_components_UcFirst__WEBPACK_IMPORTED_MODULE_14__","onExport","columns","dataField","formatter","cell","row","avatar2","alt","lastname","firstname","lastaccess","multiSelectFilter","options","comparator","Comparator","EQ","getFilter","align","classes","fullUserName","expandRow","onlyOneExpanding","showExpandColumn","expandColumnPosition","parentClassName","onExpand","isExpand","rowIndex","e","id","renderer","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","arr","span","offset","key","courseid","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Body","name","userid","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_26___default","keyField","data","exportCSV","csvProps","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_25___default","assign","baseProps","onDataSizeChange","condensed","bordered","pagination","paginationFactory","noDataIndication","filterFactory","_hoc_Aux__WEBPACK_IMPORTED_MODULE_15__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","show","onHide","dialogClassName","Header","closeButton","Title","_components_pdf_ConcentradoUsuario__WEBPACK_IMPORTED_MODULE_34__","_components_pdf_RegistroUsuario__WEBPACK_IMPORTED_MODULE_35__","class","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","animation","Footer","xl","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","Group","controlId","Control","as","onChange","showProfesores","withRouter","connect","dispatch","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","url","fetch","v","json","idUser","idRol","idCourse","logsJson","usuario","mapUser","Map","contUser","countcourse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","has","id_user","set","push","apellido","err","return","catch","error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","coursesJson","users","usersJson","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","urlBase"],"mappings":"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","file":"static/js/12.4ee9a12d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\nexport const fetchUsuarios = createAction ( FETCH_USUARIOS, apiGet(urlUsuarios) );\r\nexport const getProfesores = createAction(GET_PROFESORES);\r\nexport const getAlumnos = createAction(GET_ALUMNOS);\r\n","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\n//export const getAlumnos = createAction(GET_ALUMNOS, apiGet(urlUsuarios));\r\nexport const fillAlumnos = createAction(GET_ALUMNOS);\r\n","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\n//export const getProfesores = createAction(GET_PROFESORES, apiGet(urlUsuarios));\r\nexport const fillProfesores = createAction(GET_PROFESORES);\r\n\r\n","export const getUsuarios = state => state.usuarios;\r\nexport const getAlumnos = state => state.alumnos;\r\nexport const getProfesores = state => state.profesores;","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\n const styles = StyleSheet.create({\r\n    body: {\r\n      paddingTop: 35,\r\n      paddingBottom: 40.9,      \r\n      paddingHorizontal: 19,\r\n\r\n    },\r\n\r\n    content: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n    },\r\n    contentData: {\r\n      flexDirection: 'row',\r\n      backgroundColor: \"#ebe8e1\",\r\n      flexWrap: 'wrap',\r\n      border: '1 solid #3f4d67',\r\n      paddingBottom:5,\r\n    },\r\n    block: {\r\n      height: 30,\r\n      width: 94,\r\n    },\r\n    text: {\r\n      marginTop: 5,\r\n      textAlign: \"center\",\r\n      fontSize: 8,\r\n    },\r\n    textData: {\r\n      verticalAlign: \"baseline\",\r\n      marginTop:5,\r\n      borderBottom: '1px solid blue !important',\r\n      borderBottomWidth: \"5px\",\r\n      borderBottomStyle: \"solid\",\r\n    },\r\n    dataBlock: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n    },\r\n    dataBlockback: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n      backgroundColor:\"#d1cec6\",\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        height:56.5,\r\n    },\r\n\r\n    pageNumber: {\r\n      position: 'absolute',\r\n      fontSize: 6,\r\n      bottom: 30,\r\n      left: 0,\r\n      right: 0,\r\n      textAlign: 'center',\r\n      color: 'grey',\r\n    },\r\n\r\n\r\n  textTitle:{\r\n    fontSize: 10\r\n  },\r\n\r\n  });\r\n\r\n  export default styles;","module.exports = __webpack_public_path__ + \"static/media/concentrado_tutores.97fa793c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vasijas_final.b276690b.jpg\";","import React from 'react';\r\nimport {Row, Col, Card, Table, Tabs, Tab} from 'react-bootstrap';\r\n\r\nimport Aux from \"./../../hoc/_Aux\";\r\nimport DEMO from \"./../../store/constant\";\r\n\r\nimport avatar1 from './../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from './../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from './../../assets/images/user/avatar-3.jpg';\r\n\r\n\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\nclass ProfesorList extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            profesor: [],\r\n        };\r\n      }\r\n    render() {\r\n        const { profesor } = this.props;\r\n        return (\r\n            <tr className=\"unread\">\r\n                <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar1} alt=\"activity-user\"/></td>\r\n                <td>\r\n                    <h6 className=\"mb-1\">{profesor.firstname+\" \"+profesor.lastname}</h6>\r\n                    <p className=\"m-0\">{profesor.email}</p>\r\n                </td>\r\n                <td>\r\n                <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>11 MAY 12:56</h6>\r\n                </td>\r\n                <td><a href={DEMO.BLANK_LINK} className=\"label theme-bg2 text-white f-12\">Detalles</a></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfesorList;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass ConcentradoUsuario extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            profesor: \"\",\r\n        };\r\n      }\r\n      \r\n      showCourses(profesorCourses, info){\r\n        let totalIngresos = 0;\r\n        return profesorCourses.courses.map(          \r\n          (prof,index) => {\r\n\r\n            prof.last != null ? totalIngresos = totalIngresos + prof.count : totalIngresos = totalIngresos + 0\r\n\r\n            if(info == \"nombre\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {index+1+\") \"+prof.fullname+ \"\\n\" }\r\n                    </Text>\r\n            }else if(info == \"first\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {prof.first != null ?\r\n                      moment.unix(prof.first).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }\r\n                      \r\n                    </Text>\r\n            }else if(info == \"last\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {prof.last != null ?\r\n                      moment.unix(prof.last).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }\r\n                    </Text>\r\n            }else if(info == \"count\"){\r\n                                                    \r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"center\",fontWwight: \"bold\" } ]}>\r\n                      {prof.last != null ?\r\n                        prof.count+\"\\n\" :\r\n                        \"0\\n\" }\r\n                        <Text style={[styles.textData, {fontSize: 6,textAlign: \"center\",fontWwight: \"bold\" } ]}>\r\n                                    {index+1 == profesorCourses.courses.length ?\r\n                                     `Total: ${totalIngresos}` : \"\"}\r\n                        </Text>\r\n                    </Text>                    \r\n            }else if(info == \"total\"){\r\n              return parseInt(totalIngresos)\r\n            }    \r\n             \r\n          })        \r\n      }\r\n      \r\n\r\n    render() {\r\n        const { logs } = this.props;\r\n        console.log(\"logs\");\r\n        console.log(logs);\r\n        let total = 0;\r\n        console.log(logs);\r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n          <Page size=\"A4\"  style={styles.body}  >\r\n          <Image style={styles.image} src={concentrado_profesores}  />\r\n          <View style={styles.contentData}>\r\n            <View style={[{fontSize: 7,width: 40,}]} >\r\n             <Text style={styles.text}>No.</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90,}]} >\r\n             <Text style={styles.text}>NOMBRE DEL TUTOR</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 160,}]} >\r\n             <Text style={styles.text}>CURSO/MATERIA</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 80,}]} >\r\n             <Text style={styles.text}>PRIMER INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90, }]} >\r\n             <Text style={styles.text}>ÚLTIMO INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90, }]} >\r\n             <Text style={styles.text}>TOTAL ACCESOS</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.content}>\r\n              \r\n              {\r\n                \r\n                logs.map(\r\n                (profesor,index) => {\r\n                  // console.log(\"showCourses\")\r\n                  //console.log(this.showCourses(student.enrolledcourses, student.fullname, \"curso\"))\r\n                  // let heig = 25 * student.enrolledcourses[0].length;\r\n                  let heig = 76.5;\r\n                  let size = 8;\r\n                  let tot = this.showCourses(profesor,\"total\")\r\n                  total = total + tot[profesor.courses.length-1];\r\n\r\n                  \r\n                  \r\n                  return (<View style={ index%2 == 0 ?  [styles.dataBlock,{height: heig}]  :  [styles.dataBlockback,{height: heig}]      } >\r\n                      <View style={[styles.textData,{fontSize: 7,width: 40}]} >\r\n                      <Text style={styles.text}>{index+1}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{width: 98,textAlign: \"left !important\"}]} >\r\n                      <Text style={[styles.text,{fontSize: 8 }]}>{profesor.nombre}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 160,paddingLeft: 7, paddingRight:7}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"nombre\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 80,paddingLeft:10}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"first\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 90,paddingLeft:18}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"last\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 88,}]} >\r\n                        <Text style={styles.text}>{this.showCourses(profesor,\"count\")}                        \r\n                        </Text>\r\n                        <Text style={styles.text}>{index+1 == logs.length ? `Total: ${total}` : \"\"}</Text>  \r\n                      </View>                  \r\n                    </View>)\r\n                  })\r\n              }\r\n              </View>\r\n              <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\r\n                          `${pageNumber} / ${totalPages}`\r\n                        )} fixed />\r\n\r\n          </Page>\r\n        </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ConcentradoUsuario;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass RegistroUsuario extends React.Component {\r\n         \r\n    render() {\r\n        const { logs } = this.props;        \r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n            <Page size=\"A4\"  style={styles.body} >\r\n            <Image style={styles.image} src={concentrado_profesores}  />\r\n            \r\n            <Text style={styles.textTitle}>Tutor: {logs[logs.length-1].userName}</Text>\r\n            <Text style={styles.textTitle}>Curso:  {logs[logs.length-1].courseName}</Text>\r\n            <View style={styles.contentData}>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n\r\n            </View>\r\n            <View style={styles.content}>\r\n                    {\r\n                      logs.map(\r\n                        (log,index) => {\r\n                          if(index != logs.length-1 ){\r\n                            return (                                                                                \r\n                            <View style={[styles.dataBlock,{height: 30,}]} >\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? moment.unix(log.timecreated).format(\"LL\") : \"Sin Actividad\" }</Text>\r\n                              </View>\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? `${log.count} veces` : \"0\" } \r\n                                </Text>\r\n                              </View>\r\n                            </View>                                                                                        \r\n                            );                          \r\n                          }\r\n                        })\r\n                      }\r\n            </View>\r\n\r\n            </Page>\r\n   </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\nexport default RegistroUsuario;\r\n","import React from 'react';\r\nimport {Row, Col, Card, Container, Button, Modal, Spinner, Form} from 'react-bootstrap';\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { connect } from 'react-redux';\r\n//action creator:\r\nimport { fetchUsuarios } from '../../../actions/fetchUsuarios';\r\nimport { fillAlumnos } from '../../../actions/fillAlumnos';\r\nimport { fillProfesores } from '../../../actions/fillProfesores';\r\n//component list\r\nimport  ProfesorList  from '../../components/ProfesorList';\r\nimport { getUsuarios,getAlumnos,getProfesores } from '../../../selectors/usuarios';\r\n//creador de tablas\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { multiSelectFilter, Comparator  } from 'react-bootstrap-table2-filter';\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\n\r\n\r\n//info para logs\r\nimport { getLogs, getSingleLogs, getCourses, getCourseUsers } from './../../../api'\r\nimport { urlLogs, urlCourses, urlcourseUsers } from './../../../api/url';\r\n\r\n//import pdf component\r\nimport ConcentradoUsuario from './../../components/pdf/ConcentradoUsuario';\r\nimport RegistroUsuario from '../../components/pdf/RegistroUsuario';\r\n\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\n//form\r\nclass Alumnos extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          //obtiene la consulta que hace el fetch getLogs()  \r\n          open: false,\r\n          logsState:[],\r\n          totalLogsState:[],\r\n          pdfLogs:[],\r\n          userCount:0,\r\n          userType:5,\r\n          qualityFilter:()=>{},\r\n          courses:[],\r\n          userCourses:[],\r\n        };\r\n      }\r\n    openPDFmodal(idCurso, idUsuario, userName){\r\n        this.setState({ open: true });\r\n        //get and set all users fetch data logs\r\n        if(idCurso == 0){\r\n            const logs =  getLogs(urlLogs, 0, this.state.userType)   \r\n                logs.then((result) => (this.setState({ totalLogsState: result}) ))   \r\n\r\n        }else{\r\n            const logs =  getSingleLogs(urlLogs, idUsuario, this.state.userType, idCurso, userName)   \r\n                logs.then((result) => (this.setState({ pdfLogs: result}) ))   \r\n        }    \r\n    };\r\n\r\n    closePDFmodal = () => {\r\n\r\n        this.setState({ totalLogsState: []})\r\n        this.setState({ pdfLogs: []})\r\n        \r\n        this.setState({ open: false });                \r\n    };\r\n    getCourseUser = (event) =>{ \r\n      \r\n      if( event.target.value > 0 ){\r\n        const courseUsers =  getCourseUsers(urlcourseUsers, event.target.value)\r\n        courseUsers.then((userCoursesRes) => (this.setState({ userCourses: userCoursesRes})  )) \r\n      }else{\r\n        this.setState({ userCourses: [\"\"] })\r\n      }\r\n       \r\n      \r\n    }\r\n    componentDidMount(){\r\n        \r\n        const courses =  getCourses(urlCourses) \r\n        courses.then((coursesRes) => (this.setState({ courses: coursesRes})  ))  \r\n        //hace el fetch de usuarios, y crea 3 variables globales\r\n        if(this.props.usuarios.length == 0){\r\n            this.props.fetchUsuarios()                    \r\n        }            \r\n        if(this.props.usuarios.length > 0 && !this.props.alumnos[0]){\r\n            this.props.fillAlumnos(); \r\n            this.props.fillProfesores();             \r\n        }\r\n        if(this.props.alumnos[0]){\r\n            this.setState({ userCount: this.props.alumnos[0].length });    \r\n        }\r\n    }    \r\n    componentDidUpdate(){\r\n        //filtra los usuarios y actualiza\r\n        // 2 variables globales con los filtros\r\n        \r\n        if(this.props.usuarios.length > 0){\r\n            const alumnosUsers = this.props.usuarios.filter(alumno => alumno.roleid === \"5\");\r\n            const profesoresUsers = this.props.usuarios.filter(alumno => alumno.roleid === \"3\");                                       \r\n            if(!this.props.alumnos[0] && !this.props.alumnos[0]){\r\n                this.props.fillAlumnos(alumnosUsers);  \r\n                this.props.fillProfesores(profesoresUsers);  \r\n                this.setState({ userCount: alumnosUsers.length });                \r\n            }          \r\n        }\r\n    }\r\n\r\n    handleDataChange = ({ dataSize }) => {\r\n        this.setState({ userCount: dataSize });\r\n       // console.log(this.state.userCount);\r\n    }\r\n    showProfesores(){ \r\n        \r\n        //formato de cada row de usuario profesor/alumno             \r\n        function textFormatter(cell, row) {\r\n            return (\r\n            <Row>\r\n                <Col xs=\"1\"><img className=\"rounded-circle\" style={{width: '30px'}} src={avatar2} alt=\"Profesor\"/></Col>\r\n                <Col><strong>{`${row.lastname} `}</strong>{ row.firstname }</Col>         \r\n                <Col className=\"format-expanse-user\"><h5>Último Acceso a moodle:</h5><h6 className=\"row-text-bt\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>\r\n                     {  row.lastaccess.length >=  2 ?\r\n                        moment.unix(row.lastaccess).format(\"LL\"):\r\n                        \"Sin actividad\"} </h6>\r\n                </Col>       \r\n\r\n            </Row>\r\n            );          \r\n        }\r\n        function tituloFormat(column, colIndex) {\r\n            return (\r\n              <h5 className=\"card-title headerbtable col-xs-12 col-md-6 col-lg-4\">.Profesores</h5>\r\n            );\r\n          }\r\n        \r\n        const MyExportCSV = (props) => {\r\n            const handleClick = () => {\r\n              props.onExport();\r\n            };\r\n            return (<Row className=\"button-header-container\">\r\n                        <Col xs={0} sm={6}>.</Col>\r\n                        <Col xs={6}>\r\n                            <Col  xs={12} sm={9} md={7}><Button className=\"btn_right\" variant={'outline-primary'}  \r\n                                        onClick={()=>this.openPDFmodal(0,0,\"\")} \r\n                                        disabled={this.state.open}>\r\n                                        <UcFirst text=\"PDF\" /></Button>\r\n                            </Col>\r\n                            <Col  xs={12} sm={9} md={7} >                \r\n                            <Button className=\"btn_left\" variant={'outline-primary'}\r\n                                    onClick={ handleClick}><UcFirst text=\"CSV\" /></Button>\r\n                            </Col> \r\n                        </Col> \r\n                                                              \r\n                    </Row>\r\n                    \r\n            );\r\n          };\r\n\r\n          //course filter variables\r\n          const selectOptions = {\r\n          };\r\n          \r\n        //creacion y formato de las columnas de la tabla\r\n        //con collapse\r\n        const columns = [{\r\n            dataField: 'id',\r\n            text: 'id',\r\n           // headerFormatter: tituloFormat,\r\n          // formatter: cell => selectOptions[cell],\r\n            formatter: textFormatter,\r\n            filter: multiSelectFilter({\r\n                options: selectOptions,\r\n                comparator: Comparator.EQ,\r\n                getFilter: (filter) => {     \r\n                 this.qualityFilter = filter        \r\n                }\r\n              }),\r\n            align: 'left',\r\n            classes: 'columnbtable',\r\n            fullUserName: \"\",\r\n          }];\r\n\r\n          const expandRow = {\r\n            onlyOneExpanding: true,\r\n            showExpandColumn: false,\r\n            expandColumnPosition: 'right',\r\n            parentClassName: 'parent-expand-foo',            \r\n            onExpand: (row, isExpand, rowIndex, e) => {                                \r\n                const { logsState } = this.state;      \r\n                const { fullUserName } = this.state;      \r\n                const fullname = `${row.firstname} ${row.lastname}`\r\n               \r\n                //si el collapse esta expandido obtiene info de ese usuario \r\n                if(isExpand === true){ \r\n                    //llama una function que obtiene y filtra los logs, \r\n                    //después lo agrega a una variable global de esta clase\r\n                   \r\n                   const logs =  getSingleLogs(urlLogs, row.id,this.state.userType,0,\"\",\"\")   \r\n                   logs.then((result) => (this.setState({ logsState: result, fullUserName : fullname})  ))                                                       \r\n                }                 \r\n\r\n            },\r\n            //hace el render dentro de cada usuario profesor/alumno\r\n            renderer: row => (\r\n                <Container > \r\n                    {this.state.logsState.map(function(log,index, arr){                        \r\n                        if(arr.length-1 == index){\r\n                            return <Row className=\"justify-content-md-center\"><Col className=\"total-registros\" xs={6} sm={6} md={4}>                         \r\n                                    <h3><strong>{`${log.total} `}</strong>Registros de actividad</h3>\r\n                                    </Col>\r\n\r\n                                    {log.total == 0 ?\r\n                                    <Col className=\"total-registros\" xs={6} sm={6} md={{ span: 1, offset: 1 }}><h3>Inactivo</h3></Col> :\r\n                                    <Col className=\"total-registros\" xs={6} sm={6} md={{ span: 1, offset: 1 }}><h3>Activo</h3></Col>\r\n                                    }\r\n                                    \r\n                                   </Row>  \r\n                        }\r\n\r\n                    })}\r\n\r\n                    <Row  className=\"justify-content-sm-center\">                                                            \r\n                    {this.state.logsState.map(log =>   \r\n                    <Col xs={12} sm={6} md={4} key={log.courseid} >                       \r\n                        <Card key={`${log.courseid}cardus`} className=\"log-user-card\">\r\n                            <Card.Body key={`${log.courseid}cardbody`}>\r\n                                <Row>\r\n                                  <Col className=\"log-count\">                                      \r\n                                      \r\n                                      <p key={`${log.courseid}pcount`}>{log.first !== null ? log.count : 0}</p>\r\n                                      <p className=\"log-count-title\" key={`${log.courseid}pcount-tit`}>INTERACCIONES</p>                                      \r\n                                  </Col>\r\n                                  <Col className=\"log-date\">\r\n                                    <Col className=\"title-date\">\r\n                                        <h6  key={`${log.courseid}pfatitle`}>Primer</h6>\r\n                                        <p key={`${log.courseid}pfa`}>{ log.first != null ?\r\n                                            moment.unix(log.first).format(\"LL\"):\r\n                                            \"Sin actividad\"}\r\n                                        </p>\r\n                                    </Col>\r\n                                    <Col className=\"title-date\">\r\n                                        <h6  key={`${log.courseid}platitle`}>Último</h6>\r\n                                        <p key={`${log.courseid}pfa`}>{ log.last != null ?\r\n                                            moment.unix(log.last).format(\"LL\"):\r\n                                            \"Sin actividad\"}\r\n                                        </p>\r\n                                    </Col>\r\n                                  </Col>\r\n                                </Row>                           \r\n                                <hr/>       \r\n                                <Row className=\"log-course-catg\">                                    \r\n                                    <Col xs=\"12\"  key={`${log.courseid}pcateg`} ><span>DIPLOMADO: </span>{log.name}</Col>\r\n                                    <Col xs=\"12\"  key={`${log.courseid}pfnam`}><span>CURSO: </span>{log.fullname}</Col>\r\n                                    <Col xs=\"12\" className=\"log-pdf\">\r\n                                    <Button variant={'outline-secondary'}  \r\n                                            size=\"sm\" \r\n                                            block\r\n                                            onClick={()=>this.openPDFmodal(log.courseid,log.userid, this.state.fullUserName)} \r\n                                            disabled={this.state.open}><UcFirst text=\"PDF\" /></Button>\r\n                                    </Col>\r\n                                </Row>                                \r\n                            </Card.Body>                            \r\n                        </Card>                        \r\n                    </Col>     \r\n                    )}\r\n                    </Row>\r\n                </Container>\r\n\r\n              \r\n            )\r\n          };\r\n        //listado de profesores viene de redux en el actionCreator fetchProfesores        \r\n        if(this.props.alumnos[0]){\r\n           return  (    \r\n            <Row>\r\n                \r\n                <Col xs=\"12\">\r\n\r\n\r\n                <ToolkitProvider\r\n                    keyField=\"id\"\r\n                    data={ this.props.alumnos[0] }\r\n                    columns={ columns }\r\n                    exportCSV\r\n                    >\r\n                    {\r\n                        props => (\r\n                            <Col xs=\"12\" className=\"cont-table-csv\">\r\n\r\n                            <MyExportCSV { ...props.csvProps } />\r\n                                                    \r\n                            <BootstrapTable \r\n                                { ...props.baseProps }   \r\n                                onDataSizeChange={ this.handleDataChange }                                       \r\n                                condensed\r\n                                expandRow={ expandRow }\r\n                                bordered={ false }\r\n                                pagination={ paginationFactory()}\r\n                                noDataIndication=\"No se encontraron alumnos\"\r\n                                filter={ filterFactory() }/>\r\n                        </Col>\r\n                        )\r\n                    }\r\n                </ToolkitProvider>\r\n\r\n\r\n                </Col>\r\n            </Row>                                          \r\n\r\n           )\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {   \r\n      if(this.state.userCourses.length > 0){\r\n        // [\"106\", \"104\",\"6\",\"146\",\"148\"]\r\n        const data =  this.state.userCourses\r\n        this.qualityFilter(data)\r\n\r\n        console.log(\"data\");\r\n        console.log(data);\r\n      }\r\n        return (\r\n   \r\n            <Aux >\r\n                \r\n                <Modal show={this.state.open} onHide={this.closePDFmodal}\r\n                       dialogClassName=\"modal-pdf\">\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Concentrado de profesores</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {\r\n                            this.state.totalLogsState.length > 0 ? <ConcentradoUsuario logs={this.state.totalLogsState}></ConcentradoUsuario> :                                                 \r\n                            this.state.pdfLogs.length > 0 ? <RegistroUsuario logs={this.state.pdfLogs}></RegistroUsuario> : \r\n                            <Row className=\"justify-content-md-center\"><Col xs=\"12\" class=\"spinner_col\"><Spinner animation=\"grow\" variant=\"info\" />Cargando...</Col></Row>\r\n                        }   \r\n        \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closePDFmodal}>\r\n                        Cerrar\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                \r\n                <Row className=\"header-container\">                                                                           \r\n                    <Col  xs=\"6\" sm=\"3\" className=\"header-new-format\">ALUMNOS </Col>\r\n                    <Col   xs=\"2\" sm=\"1\"  className=\"header-count\">{this.state.userCount}</Col>       \r\n                </Row>   \r\n           \r\n                <Row >                       \r\n               \r\n                    <Col md={12} xl={12}>                        \r\n                        <Card >\r\n                            \r\n                            <Card.Body className='px-0 py-2' >\r\n                            <Row className=\"justify-content-md-center\" >\r\n                                <Col className=\"select-course-header\" >\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Control as=\"select\" onChange={this.getCourseUser}>\r\n                                    <option value = \"\">Selecciona un curso</option>\r\n                                    {\r\n                                        this.state.courses.map(log =>   \r\n                                        <option value = {log.id}>{log.fullname}</option>\r\n                                        )       \r\n                                    }\r\n                                            \r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                </Col> \r\n                            </Row> \r\n                                \r\n                                {\r\n                                    this.showProfesores()\r\n                                }\r\n                                \r\n                                \r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>                                                                                        \r\n                </Row>\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\n//simplificado\r\n//const mapDispatchToProps = { fetchProfesores }\r\n\r\n//No simplificado\r\n//hace el dispatch de los usuarios alumnos/profesores\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsuarios: () => dispatch(fetchUsuarios()),\r\n        fillAlumnos: (alumnos) => dispatch(fillAlumnos(alumnos)),\r\n        fillProfesores: (profesores) => dispatch(fillProfesores(profesores)),\r\n    }\r\n};\r\n\r\n//hace posible que se puedan user las variables de redux\r\nconst mapStateToProps = state => ({\r\n    usuarios: getUsuarios(state),\r\n    alumnos: getAlumnos(state),\r\n    profesores: getProfesores(state),\r\n});\r\n\r\n\r\n//connect(props variable,props.functions reducers);\r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps )(Alumnos));","import moment from 'moment';\r\n//obtiene datos del servidor, al ser llamado por un action creator\r\nexport const apiGet = (url) => () => fetch(url).then(v=>v.json());\r\n\r\n//obtiene los logs de moodle\r\nexport const getLogs = (urlLogs, idUser, idRol,idCourse) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{       \r\n       const usuario = [];                                                        \r\n       const mapUser = new Map();\r\n        let contUser = 0;\r\n        let countcourse = -1;\r\n       let count = 0;       \r\n       let first = 0;\r\n       let last = 0;\r\n       const map = new Map();\r\n           for(const item of logsJson){    \r\n               if(!mapUser.has(item.id_user+item.courseid)){                \r\n                mapUser.set(item.id_user+item.courseid,  true)   \r\n                count = 0                     \r\n                if(!map.has(item.id_user)){                                                                \r\n                    map.set(item.id_user, true)\r\n                    contUser = 0;\r\n                    countcourse = countcourse + 1;                         \r\n                    usuario.push({\r\n                        nombre: item.firstname+\" \"+item.apellido,\r\n                        courses:[{\r\n                            fullname: item.fullname,                     \r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }]\r\n                    })\r\n                    }else{                     \r\n                        contUser = contUser + 1;                \r\n                        usuario[countcourse].courses.push({\r\n                            fullname: item.fullname,\r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }) \r\n                    }  \r\n               }else{ \r\n                    count = count +1                              \r\n                    usuario[countcourse].courses[contUser].count = count+1         \r\n               }\r\n               //hace un ordenamiento de burbuja para obtener la ultima \r\n               //y primer fecha de entrada por cada curso\r\n               if(first > item.timecreated || first === 0 || usuario[countcourse].courses[contUser].first === 0){\r\n                   first =  item.timecreated\r\n                   usuario[countcourse].courses[contUser].first = item.timecreated\r\n               }\r\n               if(last  < item.timecreated || last === 0 || usuario[countcourse].courses[contUser].last === 0){\r\n                   last = item.timecreated\r\n                   usuario[countcourse].courses[contUser].last = item.timecreated\r\n               }\r\n           }            \r\n           return usuario                                           \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getSingleLogs = (urlLogs, idUser, idRol, idCourse, userName) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{   \r\n        if(idCourse == 0){                                                            \r\n        const result = [];\r\n        let count = 0;\r\n        let countcourse = -1;\r\n        let first = 0;\r\n        let last = 0;\r\n        let total = 0;\r\n        const map = new Map();\r\n            for(const item of logsJson){        \r\n                    //filtra los courses por su id \r\n                    \r\n                if(!map.has(item.courseid)){                                                                \r\n                    map.set(item.courseid, true)\r\n                    count = 0;\r\n                    item.timecreated != null ? total = total+1 : total = total+0;\r\n                    countcourse = countcourse + 1;\r\n                    //inserta en nuevo array courses con id diferente\r\n                    result.push({\r\n                        courseid: item.courseid,\r\n                        fullname: item.fullname,\r\n                        userid: item.userid,\r\n                        name: item.name,                       \r\n                        count: count +1,\r\n                        total: total,\r\n                        first: 0,\r\n                        last:0\r\n                    })                                \r\n                }else{\r\n                    //cada vez que detecta un id repetido\r\n                    //aumenta el contador, el cual indica la cantidad\r\n                    //total de actividad en el curso\r\n                    total = total+1;\r\n                    result[countcourse].total = total \r\n                    count = count + 1;                   \r\n                    result[countcourse].count = count+1                                \r\n                }\r\n                //hace un ordenamiento de burbuja para obtener la ultima \r\n                //y primer fecha de entrada por cada curso\r\n                if(first > item.timecreated || first === 0 || result[countcourse].first === 0){\r\n                    first =  item.timecreated\r\n                    result[countcourse].first = item.timecreated\r\n                }\r\n                if(last  < item.timecreated || last === 0 || result[countcourse].last === 0){\r\n                    last = item.timecreated\r\n                    result[countcourse].last = item.timecreated\r\n                }\r\n            } \r\n                        \r\n\r\n                \r\n                return result \r\n           }else{\r\n\r\n            const result = [];\r\n            let count = 0;\r\n            let countcourse = -1;\r\n            const map = new Map();\r\n                for(const item of logsJson){        \r\n                        //filtra los accesos del usuario por fecha                                          \r\n                    if(!map.has(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"))){                                                                \r\n                        map.set(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"), true)\r\n                        item.timecreated != null ? count = 1 : count = 0;\r\n                         countcourse = countcourse + 1;\r\n                        //inserta en nuevo array courses con fecha de diferencia\r\n                        result.push({\r\n                            timecreated: item.timecreated,              \r\n                            count: count\r\n                        })                                \r\n                    }else{\r\n                        //cada vez que detecta una fecha repetida\r\n                        //aumenta el contador, el cual indica la cantidad\r\n                        //total de actividad en el curso\r\n                        count = count + 1;                   \r\n                        result[countcourse].count = count                              \r\n                    }\r\n                } \r\n\r\n    \r\n              result.push({\r\n                courseName: logsJson[0].fullname,\r\n                userName\r\n              })  \r\n                console.log(\"logs logsJson\");\r\n                console.log(logsJson);\r\n                return result\r\n           }  \r\n           \r\n                                                  \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n \r\nexport const getCourses = (url) => {                \r\n    return fetch(`${url}`\r\n        ).then(courses => (courses.json()).then(coursesJson =>{   \r\n\r\n        return coursesJson    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getCourseUsers = (url,idCourse) => {                \r\n    return fetch(`${url}/${idCourse}`\r\n        ).then(users => (users.json()).then(usersJson =>{   \r\n            const result = [];\r\n            for(const item of usersJson){             \r\n                result.push(item.userid)            \r\n            }\r\n        return result    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\n","//url para obtener usuarioa\r\nconst urlBase = \"http://campus-virtuales.com/sigem/public/\"\r\nexport const urlUsuarios = `${urlBase}usuarios`;\r\nexport const urlLogs = `${urlBase}logs`;\r\nexport const urlCourses = `${urlBase}courses`;\r\nexport const urlcourseUsers = `${urlBase}courseuser`;"],"sourceRoot":""}