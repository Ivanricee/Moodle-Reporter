{"version":3,"sources":["selectors/usuarios.js","App/components/pdf/RegistroUsuario.js","actions/fetchAlumnos.js","actions/fetchProfesor.js","App/components/pdf/ConcentradoUsuario.js","../node_modules/react-bootstrap/es/Container.js","App/components/ProfesorList.js","App/containers/Profesor/index.js","api/index.js","api/url.js","App/components/UcFirst.js","App/components/pdf/styles.js","assets/images/pdf/concentrado_tutores.jpg","assets/images/pdf/vasijas_final.jpg"],"names":["__webpack_require__","d","__webpack_exports__","getDashboardInfo","getDashboardLogs","getAlumnos","getProfesor","getCourses","state","dashboardinfo","dashboardlogs","alumnos","profesor","courses","RegistroUsuario","logs","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_react_pdf_renderer__WEBPACK_IMPORTED_MODULE_6__","className","size","style","styles","body","image","src","concentrado_profesores","textTitle","length","userName","courseName","contentData","fontSize","width","text","content","map","log","index","dataBlock","height","textData","timecreated","moment","unix","format","concat","count","React","Component","fetchAlumnos","_constants__WEBPACK_IMPORTED_MODULE_0__","redux_actions__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_api_url__WEBPACK_IMPORTED_MODULE_3__","createAction","GET_ALUMNOS","apiGet","urlUsuarios","ALUMNO","fetchProfesor","GET_PROFESOR","PROFESOR","ConcentradoUsuario","_this","Object","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_xampp_htdocs_sigem_development_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","profesorCourses","info","totalIngresos","prof","last","textAlign","fullname","first","fontWwight","parseInt","_this2","console","total","tot","showCourses","dataBlockback","nombre","paddingLeft","paddingRight","pageNumber","render","_ref","totalPages","fixed","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","Container","forwardRef","ref","bsPrefix","fluid","_ref$as","as","prefix","displayName","defaultProps","Profesor","classCallCheck","possibleConstructorReturn","getPrototypeOf","closePDFmodal","setState","totalLogsState","pdfLogs","open","handleDataChange","dataSize","profesorCount","logsState","userType","idCurso","idUsuario","getLogs","urlLogs","then","result","getSingleLogs","profesores","_this3","columns","dataField","headerFormatter","column","colIndex","react_default","formatter","cell","row","Row","Col","xs","avatar2","alt","lastname","firstname","lastaccess","align","classes","fullUserName","expandRow","onlyOneExpanding","showExpandColumn","expandColumnPosition","parentClassName","onExpand","isExpand","rowIndex","e","id","renderer","arr","sm","md","span","offset","key","courseid","Card","Body","name","Button","variant","block","onClick","openPDFmodal","userid","disabled","UcFirst","lib_default","keyField","onDataSizeChange","data","condensed","bordered","pagination","paginationFactory","noDataIndication","filter","filterFactory","_this4","_Aux","Modal","show","onHide","dialogClassName","Header","closeButton","Title","class","Spinner","animation","Footer","xl","showProfesores","withRouter","connect","dispatch","getCourseUsers","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","url","fetch","v","json","idUser","idRol","idCourse","logsJson","usuario","mapUser","Map","contUser","countcourse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","has","id_user","set","push","apellido","err","return","catch","error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","coursesJson","type","users","usersJson","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","urlDashbrdBasicInfo","urlDashbrdCrseLogs","urlCourses","urlcourseUsers","urlBase","string","charAt","toUpperCase","slice","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","flexDirection","flexWrap","backgroundColor","border","marginTop","verticalAlign","borderBottom","borderBottomWidth","borderBottomStyle","position","bottom","left","right","color","module","exports","p"],"mappings":"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","file":"static/js/18.088cc359.chunk.js","sourcesContent":["export const getDashboardInfo = state => state.dashboardinfo;\r\nexport const getDashboardLogs = state => state.dashboardlogs;\r\nexport const getAlumnos = state => state.alumnos;\r\nexport const getProfesor = state => state.profesor;\r\nexport const getCourses = state => state.courses;\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass RegistroUsuario extends React.Component {\r\n         \r\n    render() {\r\n        const { logs } = this.props;        \r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n            <Page size=\"A4\"  style={styles.body} >\r\n            <Image style={styles.image} src={concentrado_profesores}  />\r\n            \r\n            <Text style={styles.textTitle}>Tutor: {logs[logs.length-1].userName}</Text>\r\n            <Text style={styles.textTitle}>Curso:  {logs[logs.length-1].courseName}</Text>\r\n            <View style={styles.contentData}>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>Fecha</Text>\r\n              </View>\r\n              <View style={[{fontSize: 12,width: 133}]} >\r\n                <Text style={styles.text}>No. de accesos</Text>\r\n              </View>\r\n\r\n            </View>\r\n            <View style={styles.content}>\r\n                    {\r\n                      logs.map(\r\n                        (log,index) => {\r\n                          if(index != logs.length-1 ){\r\n                            return (                                                                                \r\n                            <View style={[styles.dataBlock,{height: 30,}]} >\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? moment.unix(log.timecreated).format(\"LL\") : \"Sin Actividad\" }</Text>\r\n                              </View>\r\n\r\n                              <View style={[styles.textData,{fontSize: 7,width: 133}]} >\r\n                                <Text style={[styles.text]}>\r\n                                {log.timecreated != null ? `${log.count} veces` : \"0\" } \r\n                                </Text>\r\n                              </View>\r\n                            </View>                                                                                        \r\n                            );                          \r\n                          }\r\n                        })\r\n                      }\r\n            </View>\r\n\r\n            </Page>\r\n   </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\nexport default RegistroUsuario;\r\n","import {  GET_ALUMNOS, ALUMNO } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\nexport const fetchAlumnos = createAction(GET_ALUMNOS, apiGet(urlUsuarios+\"/\"+ALUMNO));\r\n//export const fillAlumnos = createAction(GET_ALUMNOS);\r\n","import {  GET_PROFESOR, PROFESOR } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\nexport const fetchProfesor = createAction(GET_PROFESOR, apiGet(urlUsuarios+\"/\"+PROFESOR));\r\n//export const fetchProfesores = createAction(GET_PROFESORES);\r\n\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image, PDFViewer } from '@react-pdf/renderer';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n//styles de pdf\r\nimport styles from './styles';\r\n//report images pdf\r\nimport concentrado_profesores from './../../../assets/images/pdf/concentrado_tutores.jpg';\r\nimport vasijas_final from './../../../assets/images/pdf/vasijas_final.jpg';\r\n\r\nclass ConcentradoUsuario extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            profesor: \"\",\r\n        };\r\n      }\r\n      \r\n      showCourses(profesorCourses, info){\r\n        let totalIngresos = 0;\r\n        return profesorCourses.courses.map(          \r\n          (prof,index) => {\r\n\r\n            prof.last != null ? totalIngresos = totalIngresos + prof.count : totalIngresos = totalIngresos + 0\r\n\r\n            if(info == \"nombre\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {index+1+\") \"+prof.fullname+ \"\\n\" }\r\n                    </Text>\r\n            }else if(info == \"first\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {prof.first != null ?\r\n                      moment.unix(prof.first).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }\r\n                      \r\n                    </Text>\r\n            }else if(info == \"last\"){\r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"left\", } ]}>\r\n                      {prof.last != null ?\r\n                      moment.unix(prof.last).format(\"LL\")+\"\\n\":\r\n                      \"sin ingreso\\n\" }\r\n                    </Text>\r\n            }else if(info == \"count\"){\r\n                                                    \r\n              return <Text style={[styles.textData, {fontSize: 6,textAlign: \"center\",fontWwight: \"bold\" } ]}>\r\n                      {prof.last != null ?\r\n                        prof.count+\"\\n\" :\r\n                        \"0\\n\" }\r\n                        <Text style={[styles.textData, {fontSize: 6,textAlign: \"center\",fontWwight: \"bold\" } ]}>\r\n                                    {index+1 == profesorCourses.courses.length ?\r\n                                     `Total: ${totalIngresos}` : \"\"}\r\n                        </Text>\r\n                    </Text>                    \r\n            }else if(info == \"total\"){\r\n              return parseInt(totalIngresos)\r\n            }    \r\n             \r\n          })        \r\n      }\r\n      \r\n\r\n    render() {\r\n        const { logs } = this.props;\r\n        console.log(\"logs\");\r\n        console.log(logs);\r\n        let total = 0;\r\n        console.log(logs);\r\n        return (\r\n          <PDFViewer className={\"docu\"}><Document >\r\n\r\n          <Page size=\"A4\"  style={styles.body}  >\r\n          <Image style={styles.image} src={concentrado_profesores}  />\r\n          <View style={styles.contentData}>\r\n            <View style={[{fontSize: 7,width: 40,}]} >\r\n             <Text style={styles.text}>No.</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90,}]} >\r\n             <Text style={styles.text}>NOMBRE DEL TUTOR</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 160,}]} >\r\n             <Text style={styles.text}>CURSO/MATERIA</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 80,}]} >\r\n             <Text style={styles.text}>PRIMER INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90, }]} >\r\n             <Text style={styles.text}>ÚLTIMO INGRESO</Text>\r\n            </View>\r\n            <View style={[{fontSize: 7,width: 90, }]} >\r\n             <Text style={styles.text}>TOTAL ACCESOS</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.content}>\r\n              \r\n              {\r\n                \r\n                logs.map(\r\n                (profesor,index) => {\r\n                  // console.log(\"showCourses\")\r\n                  //console.log(this.showCourses(student.enrolledcourses, student.fullname, \"curso\"))\r\n                  // let heig = 25 * student.enrolledcourses[0].length;\r\n                  let heig = 76.5;\r\n                  let size = 8;\r\n                  let tot = this.showCourses(profesor,\"total\")\r\n                  total = total + tot[profesor.courses.length-1];\r\n\r\n                  \r\n                  \r\n                  return (<View style={ index%2 == 0 ?  [styles.dataBlock,{height: heig}]  :  [styles.dataBlockback,{height: heig}]      } >\r\n                      <View style={[styles.textData,{fontSize: 7,width: 40}]} >\r\n                      <Text style={styles.text}>{index+1}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{width: 98,textAlign: \"left !important\"}]} >\r\n                      <Text style={[styles.text,{fontSize: 8 }]}>{profesor.nombre}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 160,paddingLeft: 7, paddingRight:7}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"nombre\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 80,paddingLeft:10}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"first\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 90,paddingLeft:18}]} >\r\n                      <Text style={styles.text}>{this.showCourses(profesor,\"last\")}</Text>\r\n                      </View>\r\n                      <View style={[styles.textData,{fontSize: 7,width: 88,}]} >\r\n                        <Text style={styles.text}>{this.showCourses(profesor,\"count\")}                        \r\n                        </Text>\r\n                        <Text style={styles.text}>{index+1 == logs.length ? `Total: ${total}` : \"\"}</Text>  \r\n                      </View>                  \r\n                    </View>)\r\n                  })\r\n              }\r\n              </View>\r\n              <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\r\n                          `${pageNumber} / ${totalPages}`\r\n                        )} fixed />\r\n\r\n          </Page>\r\n        </Document></PDFViewer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ConcentradoUsuario;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? prefix + \"-fluid\" : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from 'react';\r\nimport {Row, Col, Card, Table, Tabs, Tab} from 'react-bootstrap';\r\n\r\nimport Aux from \"./../../hoc/_Aux\";\r\nimport DEMO from \"./../../store/constant\";\r\n\r\nimport avatar1 from './../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from './../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from './../../assets/images/user/avatar-3.jpg';\r\n\r\n\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\nclass ProfesorList extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            profesor: [],\r\n        };\r\n      }\r\n    render() {\r\n        const { profesor } = this.props;\r\n        return (\r\n            <tr className=\"unread\">\r\n                <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar1} alt=\"activity-user\"/></td>\r\n                <td>\r\n                    <h6 className=\"mb-1\">{profesor.firstname+\" \"+profesor.lastname}</h6>\r\n                    <p className=\"m-0\">{profesor.email}</p>\r\n                </td>\r\n                <td>\r\n                <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>11 MAY 12:56</h6>\r\n                </td>\r\n                <td><a href={DEMO.BLANK_LINK} className=\"label theme-bg2 text-white f-12\">Detalles</a></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfesorList;\r\n","import React from 'react';\r\nimport {Row, Col, Card, Container, Button, Modal,Spinner} from 'react-bootstrap';\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { connect } from 'react-redux';\r\n//action creator:\r\nimport { fetchAlumnos } from '../../../actions/fetchAlumnos';\r\nimport { fetchProfesor } from '../../../actions/fetchProfesor';\r\n//component list\r\nimport  ProfesorList  from '../../components/ProfesorList';\r\nimport { getAlumnos,getProfesor } from '../../../selectors/usuarios';\r\n//creador de tablas\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n//info para logs\r\nimport { getLogs,getSingleLogs } from './../../../api'\r\nimport { urlLogs } from './../../../api/url';\r\n\r\n//import pdf component\r\nimport ConcentradoUsuario from './../../components/pdf/ConcentradoUsuario';\r\nimport RegistroUsuario from '../../components/pdf/RegistroUsuario';\r\n\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\n\r\nclass Profesor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          //obtiene la consulta que hace el fetch getLogs()  \r\n          open: false,\r\n          logsState:[],\r\n          totalLogsState:[],\r\n          pdfLogs:[],\r\n          profesorCount:0,\r\n          userType:3,\r\n        };\r\n      }\r\n    openPDFmodal(idCurso, idUsuario, userName){\r\n        this.setState({ open: true });\r\n        //get and set all users fetch data logs\r\n        if(idCurso == 0){\r\n            const logs =  getLogs(urlLogs, 0, this.state.userType)   \r\n                logs.then((result) => (this.setState({ totalLogsState: result}) ))   \r\n\r\n        }else{\r\n            const logs =  getSingleLogs(urlLogs, idUsuario, this.state.userType, idCurso, userName)   \r\n                logs.then((result) => (this.setState({ pdfLogs: result}) ))   \r\n        }    \r\n    };\r\n\r\n    closePDFmodal = () => {\r\n\r\n        this.setState({ totalLogsState: []})\r\n        this.setState({ pdfLogs: []})\r\n        \r\n        this.setState({ open: false });                \r\n    };\r\n    componentDidMount(){\r\n        //hace el fetch de usuarios, y crea 3 variables globales\r\n        if(this.props.profesores.length == 0){\r\n            this.props.fetchProfesor();                    \r\n        }            \r\n\r\n    }    \r\n\r\n\r\n    handleDataChange = ({ dataSize }) => {\r\n        this.setState({ profesorCount: dataSize });\r\n        console.log(this.state.profesorCount);\r\n    }\r\n    showProfesores(){   \r\n        //formato de cada row de usuario profesor/alumno    \r\n         \r\n        function textFormatter(cell, row) {\r\n            return (\r\n            <Row>\r\n                <Col xs=\"1\"><img className=\"rounded-circle\" style={{width: '30px'}} src={avatar2} alt=\"Profesor\"/></Col>\r\n                <Col><strong>{`${row.lastname} `}</strong>{ row.firstname }</Col>         \r\n                <Col className=\"format-expanse-user\"><h5>Último Acceso a moodle:</h5><h6 className=\"row-text-bt\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>\r\n                     {  row.lastaccess.length >=  2 ?\r\n                        moment.unix(row.lastaccess).format(\"LL\"):\r\n                        \"Sin actividad\"} </h6>\r\n                </Col>       \r\n\r\n            </Row>\r\n            );          \r\n        }\r\n        function tituloFormat(column, colIndex) {\r\n            return (\r\n              <h5 className=\"card-title headerbtable col-xs-12 col-md-6 col-lg-4\">.</h5>\r\n            );\r\n          }\r\n        //creacion y formato de las columnas de la tabla\r\n        //con collapse\r\n        const columns = [{\r\n            dataField: 'firstname',\r\n            text: ' ',\r\n            headerFormatter: tituloFormat,\r\n            formatter: textFormatter,\r\n            align: 'left',\r\n            classes: 'columnbtable',\r\n            fullUserName: \"\",\r\n          }];\r\n\r\n          const expandRow = {\r\n            onlyOneExpanding: true,\r\n            showExpandColumn: false,\r\n            expandColumnPosition: 'right',\r\n            parentClassName: 'parent-expand-foo',            \r\n            onExpand: (row, isExpand, rowIndex, e) => {                                \r\n                const { logsState } = this.state;      \r\n                const { fullUserName } = this.state;      \r\n                const fullname = `${row.firstname} ${row.lastname}`\r\n               \r\n                //si el collapse esta expandido obtiene info de ese usuario \r\n                if(isExpand === true){ \r\n                    //llama una function que obtiene y filtra los logs, \r\n                    //después lo agrega a una variable global de esta clase\r\n                   \r\n                   const logs =  getSingleLogs(urlLogs, row.id,3,0,\"\",\"\")   \r\n                   logs.then((result) => (this.setState({ logsState: result, fullUserName : fullname})  ))                                                       \r\n                }                 \r\n\r\n            },\r\n            //hace el render dentro de cada usuario profesor/alumno\r\n            renderer: row => (\r\n                <Container > \r\n                    {this.state.logsState.map(function(log,index, arr){                        \r\n                        if(arr.length-1 == index){\r\n                            return <Row className=\"justify-content-md-center\"><Col className=\"total-registros\" xs={6} sm={6} md={4}>                         \r\n                                    <h3><strong>{`${log.total} `}</strong>Registros de actividad</h3>\r\n                                    </Col>\r\n\r\n                                    {log.total == 0 ?\r\n                                    <Col className=\"total-registros\" xs={6} sm={6} md={{ span: 1, offset: 1 }}><h3>Inactivo</h3></Col> :\r\n                                    <Col className=\"total-registros\" xs={6} sm={6} md={{ span: 1, offset: 1 }}><h3>Activo</h3></Col>\r\n                                    }\r\n                                    \r\n                                   </Row>  \r\n                        }\r\n\r\n                    })}\r\n\r\n                    <Row  className=\"justify-content-sm-center\">                                                            \r\n                    {this.state.logsState.map(log =>   \r\n                    <Col xs={12} sm={6} md={4} key={log.courseid} >                       \r\n                        <Card key={`${log.courseid}cardus`} className=\"log-user-card\">\r\n                            <Card.Body key={`${log.courseid}cardbody`}>\r\n                                <Row>\r\n                                  <Col className=\"log-count\">                                      \r\n                                      \r\n                                      <p key={`${log.courseid}pcount`}>{log.first !== null ? log.count : 0}</p>\r\n                                      <p className=\"log-count-title\" key={`${log.courseid}pcount-tit`}>INTERACCIONES</p>                                      \r\n                                  </Col>\r\n                                  <Col className=\"log-date\">\r\n                                    <Col className=\"title-date\">\r\n                                        <h6  key={`${log.courseid}pfatitle`}>Primer</h6>\r\n                                        <p key={`${log.courseid}pfa`}>{ log.first != null ?\r\n                                            moment.unix(log.first).format(\"LL\"):\r\n                                            \"Sin actividad\"}\r\n                                        </p>\r\n                                    </Col>\r\n                                    <Col className=\"title-date\">\r\n                                        <h6  key={`${log.courseid}platitle`}>Último</h6>\r\n                                        <p key={`${log.courseid}pfa`}>{ log.last != null ?\r\n                                            moment.unix(log.last).format(\"LL\"):\r\n                                            \"Sin actividad\"}\r\n                                        </p>\r\n                                    </Col>\r\n                                  </Col>\r\n                                </Row>                           \r\n                                <hr/>       \r\n                                <Row className=\"log-course-catg\">                                    \r\n                                    <Col xs=\"12\"  key={`${log.courseid}pcateg`} ><span>DIPLOMADO: </span>{log.name}</Col>\r\n                                    <Col xs=\"12\"  key={`${log.courseid}pfnam`}><span>CURSO: </span>{log.fullname}</Col>\r\n                                    <Col xs=\"12\" className=\"log-pdf\">\r\n                                    <Button variant={'outline-secondary'}  \r\n                                            size=\"sm\" \r\n                                            block\r\n                                            onClick={()=>this.openPDFmodal(log.courseid,log.userid, this.state.fullUserName)} \r\n                                            disabled={this.state.open}><UcFirst text=\"PDF\" /></Button>\r\n                                    </Col>\r\n                                </Row>                                \r\n                            </Card.Body>                            \r\n                        </Card>                        \r\n                    </Col>     \r\n                    )}\r\n                    </Row>\r\n                </Container>\r\n\r\n              \r\n            )\r\n          };\r\n        //listado de profesores viene de redux en el actionCreator fetchProfesores        \r\n        if(this.props.profesores[0]){\r\n           return  (    \r\n            <Row className=\"tableUsers\">\r\n                <Col xs=\"12\">\r\n                <BootstrapTable \r\n                    keyField='id'\r\n                    onDataSizeChange={ this.handleDataChange }\r\n                    data={ this.props.profesores[0]}\r\n                    columns={ columns }\r\n                    condensed\r\n                    expandRow={ expandRow }\r\n                    bordered={ false }\r\n                    pagination={ paginationFactory()}\r\n                    noDataIndication=\"No hay profesores\"\r\n                    filter={ filterFactory() \r\n                    }/>\r\n                </Col>\r\n            </Row>                                          \r\n\r\n           )\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {   \r\n    \r\n        return (\r\n   \r\n            <Aux >\r\n                <Modal show={this.state.open} onHide={this.closePDFmodal}\r\n                       dialogClassName=\"modal-pdf\">\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Concentrado de profesores</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {\r\n                            this.state.totalLogsState.length > 0 ? <ConcentradoUsuario logs={this.state.totalLogsState}></ConcentradoUsuario> :                                                 \r\n                            this.state.pdfLogs.length > 0 ? <RegistroUsuario logs={this.state.pdfLogs}></RegistroUsuario> : \r\n                            <Row className=\"justify-content-md-center\"><Col xs=\"12\" class=\"spinner_col\"><Spinner animation=\"grow\" variant=\"info\" />Cargando...</Col></Row>\r\n                        }   \r\n        \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.closePDFmodal}>\r\n                        Cerrar\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Row className=\"header-container\">                  \r\n                    <Col  xs=\"6\" sm=\"3\" className=\"header-new-format\">PROFESORES </Col>\r\n                    <Col   xs=\"2\" sm=\"1\"  className=\"header-count\">{this.state.profesorCount > 0 ? this.state.profesorCount :  this.props.profesores.length > 0 ? this.props.profesores[0].length : 0 }</Col>\r\n                    \r\n                    \r\n                    <Col><Button variant={'outline-primary'}  \r\n                            onClick={()=>this.openPDFmodal(0,0,\"\")} \r\n                            disabled={this.state.open}>\r\n                            <UcFirst text=\"PDF\" /></Button>\r\n                    </Col>\r\n                \r\n                </Row>\r\n                <Row> \r\n                </Row>                \r\n                <Row >                                       \r\n                    <Col md={12} xl={12}>                        \r\n                        <Card >\r\n                            <Card.Body className='px-0 py-2' >\r\n                                {\r\n                                    this.showProfesores()\r\n                                }\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>                                                                                        \r\n                </Row>\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\n//simplificado\r\n//const mapDispatchToProps = { fetchProfesores }\r\n\r\n//No simplificado\r\n//hace el dispatch de los usuarios alumnos/profesores\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchProfesor: () => dispatch(fetchProfesor()),\r\n    }\r\n};\r\n\r\n//hace posible que se puedan user las variables de redux\r\nconst mapStateToProps = state => ({\r\n    alumnos: getAlumnos(state),\r\n    profesores: getProfesor(state),\r\n});\r\n\r\n\r\n//connect(props variable,props.functions reducers);\r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps )(Profesor));","import moment from 'moment';\r\n//obtiene datos del servidor, al ser llamado por un action creator\r\nexport const apiGet = (url) => () => fetch(url).then(v=>v.json());\r\n\r\n//obtiene los logs de moodle\r\nexport const getLogs = (urlLogs, idUser, idRol,idCourse) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{       \r\n       const usuario = [];                                                        \r\n       const mapUser = new Map();\r\n        let contUser = 0;\r\n        let countcourse = -1;\r\n       let count = 0;       \r\n       let first = 0;\r\n       let last = 0;\r\n       const map = new Map();\r\n           for(const item of logsJson){    \r\n               if(!mapUser.has(item.id_user+item.courseid)){                \r\n                mapUser.set(item.id_user+item.courseid,  true)   \r\n                count = 0                     \r\n                if(!map.has(item.id_user)){                                                                \r\n                    map.set(item.id_user, true)\r\n                    contUser = 0;\r\n                    countcourse = countcourse + 1;                         \r\n                    usuario.push({\r\n                        nombre: item.firstname+\" \"+item.apellido,\r\n                        courses:[{\r\n                            fullname: item.fullname,                     \r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }]\r\n                    })\r\n                    }else{                     \r\n                        contUser = contUser + 1;                \r\n                        usuario[countcourse].courses.push({\r\n                            fullname: item.fullname,\r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }) \r\n                    }  \r\n               }else{ \r\n                    count = count +1                              \r\n                    usuario[countcourse].courses[contUser].count = count+1         \r\n               }\r\n               //hace un ordenamiento de burbuja para obtener la ultima \r\n               //y primer fecha de entrada por cada curso\r\n               if(first > item.timecreated || first === 0 || usuario[countcourse].courses[contUser].first === 0){\r\n                   first =  item.timecreated\r\n                   usuario[countcourse].courses[contUser].first = item.timecreated\r\n               }\r\n               if(last  < item.timecreated || last === 0 || usuario[countcourse].courses[contUser].last === 0){\r\n                   last = item.timecreated\r\n                   usuario[countcourse].courses[contUser].last = item.timecreated\r\n               }\r\n           }            \r\n           return usuario                                           \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getSingleLogs = (urlLogs, idUser, idRol, idCourse, userName) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{   \r\n        if(idCourse == 0){                                                            \r\n        const result = [];\r\n        let count = 0;\r\n        let countcourse = -1;\r\n        let first = 0;\r\n        let last = 0;\r\n        let total = 0;\r\n        const map = new Map();\r\n            for(const item of logsJson){        \r\n                    //filtra los courses por su id \r\n                    \r\n                if(!map.has(item.courseid)){                                                                \r\n                    map.set(item.courseid, true)\r\n                    count = 0;\r\n                    item.timecreated != null ? total = total+1 : total = total+0;\r\n                    countcourse = countcourse + 1;\r\n                    //inserta en nuevo array courses con id diferente\r\n                    result.push({\r\n                        courseid: item.courseid,\r\n                        fullname: item.fullname,\r\n                        userid: item.userid,\r\n                        name: item.name,                       \r\n                        count: count +1,\r\n                        total: total,\r\n                        first: 0,\r\n                        last:0\r\n                    })                                \r\n                }else{\r\n                    //cada vez que detecta un id repetido\r\n                    //aumenta el contador, el cual indica la cantidad\r\n                    //total de actividad en el curso\r\n                    total = total+1;\r\n                    result[countcourse].total = total \r\n                    count = count + 1;                   \r\n                    result[countcourse].count = count+1                                \r\n                }\r\n                //hace un ordenamiento de burbuja para obtener la ultima \r\n                //y primer fecha de entrada por cada curso\r\n                if(first > item.timecreated || first === 0 || result[countcourse].first === 0){\r\n                    first =  item.timecreated\r\n                    result[countcourse].first = item.timecreated\r\n                }\r\n                if(last  < item.timecreated || last === 0 || result[countcourse].last === 0){\r\n                    last = item.timecreated\r\n                    result[countcourse].last = item.timecreated\r\n                }\r\n            } \r\n                        \r\n\r\n                \r\n                return result \r\n           }else{\r\n\r\n            const result = [];\r\n            let count = 0;\r\n            let countcourse = -1;\r\n            const map = new Map();\r\n                for(const item of logsJson){        \r\n                        //filtra los accesos del usuario por fecha                                          \r\n                    if(!map.has(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"))){                                                                \r\n                        map.set(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"), true)\r\n                        item.timecreated != null ? count = 1 : count = 0;\r\n                         countcourse = countcourse + 1;\r\n                        //inserta en nuevo array courses con fecha de diferencia\r\n                        result.push({\r\n                            timecreated: item.timecreated,              \r\n                            count: count\r\n                        })                                \r\n                    }else{\r\n                        //cada vez que detecta una fecha repetida\r\n                        //aumenta el contador, el cual indica la cantidad\r\n                        //total de actividad en el curso\r\n                        count = count + 1;                   \r\n                        result[countcourse].count = count                              \r\n                    }\r\n                } \r\n\r\n    \r\n              result.push({\r\n                courseName: logsJson[0].fullname,\r\n                userName\r\n              })  \r\n                console.log(\"logs logsJson\");\r\n                console.log(logsJson);\r\n                return result\r\n           }  \r\n           \r\n                                                  \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n \r\nexport const getCourses = (url) => {                \r\n    return fetch(`${url}`\r\n        ).then(courses => (courses.json()).then(coursesJson =>{   \r\n\r\n        return coursesJson    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getCourseUsers = (url,idCourse,type) => {                \r\n    return fetch(`${url}/${idCourse}/${type}`\r\n        ).then(users => (users.json()).then(usersJson =>{   \r\n            const result = [];\r\n            for(const item of usersJson){             \r\n                result.push(item.userid)            \r\n            }\r\n        return result    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\n","//url para obtener usuarioa\r\nconst urlBase = \"http://campus-virtuales.com/sigem/public/\"\r\nexport const urlUsuarios = `${urlBase}usuarios`;\r\nexport const urlDashbrdBasicInfo = `${urlBase}basicinfo`;\r\nexport const urlDashbrdCrseLogs = `${urlBase}courselogs`;\r\nexport const urlLogs = `${urlBase}logs`;\r\nexport const urlCourses = `${urlBase}courses`;\r\nexport const urlcourseUsers = `${urlBase}courseuser`;","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\n const styles = StyleSheet.create({\r\n    body: {\r\n      paddingTop: 35,\r\n      paddingBottom: 40.9,      \r\n      paddingHorizontal: 19,\r\n\r\n    },\r\n\r\n    content: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n    },\r\n    contentData: {\r\n      flexDirection: 'row',\r\n      backgroundColor: \"#ebe8e1\",\r\n      flexWrap: 'wrap',\r\n      border: '1 solid #3f4d67',\r\n      paddingBottom:5,\r\n    },\r\n    block: {\r\n      height: 30,\r\n      width: 94,\r\n    },\r\n    text: {\r\n      marginTop: 5,\r\n      textAlign: \"center\",\r\n      fontSize: 8,\r\n    },\r\n    textData: {\r\n      verticalAlign: \"baseline\",\r\n      marginTop:5,\r\n      borderBottom: '1px solid blue !important',\r\n      borderBottomWidth: \"5px\",\r\n      borderBottomStyle: \"solid\",\r\n    },\r\n    dataBlock: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n    },\r\n    dataBlockback: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      textAlign: \"center\",\r\n      backgroundColor:\"#d1cec6\",\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        height:56.5,\r\n    },\r\n\r\n    pageNumber: {\r\n      position: 'absolute',\r\n      fontSize: 6,\r\n      bottom: 30,\r\n      left: 0,\r\n      right: 0,\r\n      textAlign: 'center',\r\n      color: 'grey',\r\n    },\r\n\r\n\r\n  textTitle:{\r\n    fontSize: 10\r\n  },\r\n\r\n  });\r\n\r\n  export default styles;","module.exports = __webpack_public_path__ + \"static/media/concentrado_tutores.97fa793c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vasijas_final.b276690b.jpg\";"],"sourceRoot":""}