{"version":3,"sources":["selectors/usuarios.js","../node_modules/react-chartjs-2/node_modules/lodash/_root.js","../node_modules/react-chartjs-2/node_modules/lodash/isArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_getNative.js","../node_modules/react-bootstrap/es/TabContext.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseGetTag.js","../node_modules/react-chartjs-2/node_modules/lodash/isObjectLike.js","../node_modules/react-bootstrap/es/TabContainer.js","../node_modules/react-bootstrap/es/NavItem.js","../node_modules/react-bootstrap/es/TabContent.js","../node_modules/react-bootstrap/es/TabPane.js","../node_modules/react-bootstrap/es/AbstractNavItem.js","../node_modules/react-bootstrap/es/NavLink.js","../node_modules/react-chartjs-2/node_modules/lodash/_ListCache.js","../node_modules/react-chartjs-2/node_modules/lodash/_assocIndexOf.js","../node_modules/react-chartjs-2/node_modules/lodash/_Symbol.js","../node_modules/react-chartjs-2/node_modules/lodash/_nativeCreate.js","../node_modules/react-chartjs-2/node_modules/lodash/_getMapData.js","../node_modules/react-chartjs-2/node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsEqual.js","../node_modules/react-chartjs-2/node_modules/lodash/_Map.js","../node_modules/react-chartjs-2/node_modules/lodash/isObject.js","../node_modules/react-chartjs-2/node_modules/lodash/_MapCache.js","../node_modules/react-chartjs-2/node_modules/lodash/keys.js","../node_modules/react-chartjs-2/node_modules/lodash/isLength.js","../node_modules/react-chartjs-2/node_modules/lodash/_isKey.js","../node_modules/react-chartjs-2/node_modules/lodash/isSymbol.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/@restart/context/mapContextToProps.js","../node_modules/react-bootstrap/es/AbstractNav.js","../node_modules/react-bootstrap/es/Nav.js","../node_modules/chart.js/dist/Chart.js","../node_modules/react-chartjs-2/node_modules/lodash/_Stack.js","../node_modules/react-chartjs-2/node_modules/lodash/eq.js","../node_modules/react-chartjs-2/node_modules/lodash/isFunction.js","../node_modules/react-chartjs-2/node_modules/lodash/_freeGlobal.js","../node_modules/react-chartjs-2/node_modules/lodash/_toSource.js","../node_modules/react-chartjs-2/node_modules/lodash/_equalArrays.js","../node_modules/react-chartjs-2/node_modules/lodash/isArguments.js","../node_modules/react-chartjs-2/node_modules/lodash/isBuffer.js","../node_modules/react-chartjs-2/node_modules/lodash/_isIndex.js","../node_modules/react-chartjs-2/node_modules/lodash/isTypedArray.js","../node_modules/react-chartjs-2/node_modules/lodash/isArrayLike.js","../node_modules/react-chartjs-2/node_modules/lodash/_isStrictComparable.js","../node_modules/react-chartjs-2/node_modules/lodash/_matchesStrictComparable.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/react-chartjs-2/node_modules/lodash/isEqual.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsEqualDeep.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsNative.js","../node_modules/react-chartjs-2/node_modules/lodash/_getRawTag.js","../node_modules/react-chartjs-2/node_modules/lodash/_objectToString.js","../node_modules/react-chartjs-2/node_modules/lodash/_isMasked.js","../node_modules/react-chartjs-2/node_modules/lodash/_coreJsData.js","../node_modules/react-chartjs-2/node_modules/lodash/_getValue.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_Hash.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_isKeyable.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_SetCache.js","../node_modules/react-chartjs-2/node_modules/lodash/_setCacheAdd.js","../node_modules/react-chartjs-2/node_modules/lodash/_setCacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_arraySome.js","../node_modules/react-chartjs-2/node_modules/lodash/_cacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_equalByTag.js","../node_modules/react-chartjs-2/node_modules/lodash/_Uint8Array.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapToArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_setToArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_equalObjects.js","../node_modules/react-chartjs-2/node_modules/lodash/_getAllKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseGetAllKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayPush.js","../node_modules/react-chartjs-2/node_modules/lodash/_getSymbols.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayFilter.js","../node_modules/react-chartjs-2/node_modules/lodash/stubArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayLikeKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseTimes.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsArguments.js","../node_modules/react-chartjs-2/node_modules/lodash/stubFalse.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsTypedArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseUnary.js","../node_modules/react-chartjs-2/node_modules/lodash/_nodeUtil.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_isPrototype.js","../node_modules/react-chartjs-2/node_modules/lodash/_nativeKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_overArg.js","../node_modules/react-chartjs-2/node_modules/lodash/_getTag.js","../node_modules/react-chartjs-2/node_modules/lodash/_DataView.js","../node_modules/react-chartjs-2/node_modules/lodash/_Promise.js","../node_modules/react-chartjs-2/node_modules/lodash/_Set.js","../node_modules/react-chartjs-2/node_modules/lodash/_WeakMap.js","../node_modules/react-chartjs-2/node_modules/lodash/keyBy.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseAssignValue.js","../node_modules/react-chartjs-2/node_modules/lodash/_defineProperty.js","../node_modules/react-chartjs-2/node_modules/lodash/_createAggregator.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayAggregator.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseAggregator.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseEach.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseForOwn.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseFor.js","../node_modules/react-chartjs-2/node_modules/lodash/_createBaseFor.js","../node_modules/react-chartjs-2/node_modules/lodash/_createBaseEach.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIteratee.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseMatches.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsMatch.js","../node_modules/react-chartjs-2/node_modules/lodash/_getMatchData.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseMatchesProperty.js","../node_modules/react-chartjs-2/node_modules/lodash/get.js","../node_modules/react-chartjs-2/node_modules/lodash/_stringToPath.js","../node_modules/react-chartjs-2/node_modules/lodash/_memoizeCapped.js","../node_modules/react-chartjs-2/node_modules/lodash/memoize.js","../node_modules/react-chartjs-2/node_modules/lodash/toString.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseToString.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayMap.js","../node_modules/react-chartjs-2/node_modules/lodash/hasIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseHasIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_hasPath.js","../node_modules/react-chartjs-2/node_modules/lodash/identity.js","../node_modules/react-chartjs-2/node_modules/lodash/property.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseProperty.js","../node_modules/react-chartjs-2/node_modules/lodash/_basePropertyDeep.js","../node_modules/react-bootstrap/es/Tab.js","actions/fetchDashboard.js","App/components/Charts/PieDonutChart.js","App/components/Charts/MultiBarChart.js","App/containers/Dashboard/index.js","../node_modules/react-bootstrap/es/utils/ElementChildren.js","../node_modules/react-bootstrap/es/Tabs.js","api/index.js","api/url.js","App/components/UcFirst.js"],"names":["__webpack_require__","d","__webpack_exports__","getDashboardInfo","getDashboardLogs","getAlumnos","getProfesor","getCourses","state","dashboardinfo","dashboardlogs","alumnos","profesor","courses","freeGlobal","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","react__WEBPACK_IMPORTED_MODULE_0__","TabContext","n","a","createContext","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","uncontrollable__WEBPACK_IMPORTED_MODULE_3__","_TabContext__WEBPACK_IMPORTED_MODULE_4__","_SelectableContext__WEBPACK_IMPORTED_MODULE_5__","TabContainer","_React$Component","props","_this","call","this","getControlledId","getKey","getControllerId","tabContext","onSelect","activeKey","transition","mountOnEnter","unmountOnExit","getDerivedStateFromProps","_ref","prevState","_proto","prototype","type","_this$props","generateChildId","id","render","_this$props2","children","createElement","Provider","Component","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","NavItem","forwardRef","ref","bsPrefix","className","_ref$as","as","displayName","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","TabContent","apply","arguments","_this$props$as","_TabContext__WEBPACK_IMPORTED_MODULE_5__","_SelectableContext__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","TabPane","_useTabContext","context","rest","shouldTransition","eventKey","active","aria-labelledby","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","aria-hidden","in","AbstractNavItem","react_default","tabIndex","onClick","objectWithoutPropertiesLoose","navKey","SelectableContext","href","parentOnSelect","react","navContext","NavContext","isActive","handleOnclick","useEventCallback","e","esm_extends","classnames_default","defaultProps","disabled","es_AbstractNavItem","NavLink_defaultProps","SafeAnchor","NavLink","ThemeProvider","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","clear","entry","set","get","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","defineProperty","default","_len","validators","_key","_createChainableTypeChecker2","_len2","args","_key2","error","forEach","validator","obj","_createChainableTypeChecker","__esModule","maybeOpts","mapToProps","$mapContextToProps","consumers","_react","_interopRequireDefault","_forwardRef","_extends","assign","target","i","source","hasOwnProperty","getDisplayName","name","ensureConsumer","c","Consumer","maybeArrayOfConsumers","_ref$forwardRefAs","forwardRefAs","SingleConsumer","contextTransform","_extends2","propsWithRef","_extends3","reduceRight","inner","Context","concat","contexts","noop","AbstractNav_AbstractNav","AbstractNav","handleSelect","event","handleKeyDown","nextActiveChild","onKeyDown","getNextActiveChild","preventDefault","dataset","rbEventKey","_needsRefocus","attachRef","listNode","inheritsLoose","componentDidUpdate","activeChild","querySelector","focus","offset","items","querySelectorAll_default","indexOf","nextIndex","_this$props2$as","es_AbstractNav","mapContextToProps_default","_ref2","Nav","uncontrolledProps","_classNames","navbarBsPrefix","cardHeaderBsPrefix","_useUncontrolled","esm","_useUncontrolled$as","variant","fill","justify","navbar","navbarContext","NavbarContext","cardContext","CardContext","Item","Link","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","console","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","process","HorizontalBar","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_temp","handleOnClick","chartInstance","onElementsClick","componentWillMount","componentDidMount","renderChart","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","_props2","_props3","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_React$Component3","Pie","_this7","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","RegExp","replace","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_TabContainer__WEBPACK_IMPORTED_MODULE_2__","_TabContent__WEBPACK_IMPORTED_MODULE_3__","_TabPane__WEBPACK_IMPORTED_MODULE_4__","Tab","Container","Content","Pane","fetchUsuariosCrseLogs","createAction","FETCH_DASHBOARDCLOGS","apiGet","urlDashbrdCrseLogs","fetchDashboardBasicInfo","FETCH_DASHBOARDBINFO","urlDashbrdBasicInfo","datum","React","MultiBarChart","datn","fullname","usercount","getData","react_chartjs_2_es","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","open","option","Charts_MultiBarChart","setState","_Aux","Row","Col","md","xl","Card","Body","roleid","PROFESOR","ALUMNO","aria-valuenow","aria-valuemin","aria-valuemax","COORDINADOR","Tabs","defaultActiveKey","handleClick","withRouter","connect","dispatch","Children","child","isValidElement","Tabs_TabContainer","ControlledComponent","getDefaultActiveKey","Tabs_Tabs","renderTab","_child$props","tabClassName","_this$props$activeKey","childProps","getLogs","getSingleLogs","getCourseUsers","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","url","fetch","then","json","urlLogs","idUser","idRol","idCourse","logs","logsJson","usuario","mapUser","contUser","countcourse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","id_user","courseid","nombre","firstname","apellido","timecreated","err","return","catch","userName","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","userid","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","unix","courseName","coursesJson","users","usersJson","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","urlUsuarios","urlCourses","urlcourseUsers","urlBase","UcFirst"],"mappings":"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","file":"static/js/8.ffbb7f44.chunk.js","sourcesContent":["export const getDashboardInfo = state => state.dashboardinfo;\r\nexport const getDashboardLogs = state => state.dashboardlogs;\r\nexport const getAlumnos = state => state.alumnos;\r\nexport const getProfesor = state => state.profesor;\r\nexport const getCourses = state => state.courses;\r\n","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","import React from 'react';\nvar TabContext = React.createContext(null);\nexport default TabContext;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { uncontrollable } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContainer, _React$Component);\n\n  function TabContainer(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.getControlledId = function (key) {\n      return _this.getKey(key, 'tabpane');\n    };\n\n    _this.getControllerId = function (key) {\n      return _this.getKey(key, 'tab');\n    };\n\n    _this.state = {\n      tabContext: {\n        onSelect: _this.props.onSelect,\n        activeKey: _this.props.activeKey,\n        transition: _this.props.transition,\n        mountOnEnter: _this.props.mountOnEnter,\n        unmountOnExit: _this.props.unmountOnExit,\n        getControlledId: _this.getControlledId,\n        getControllerId: _this.getControllerId\n      }\n    };\n    return _this;\n  }\n\n  TabContainer.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var activeKey = _ref.activeKey,\n        mountOnEnter = _ref.mountOnEnter,\n        unmountOnExit = _ref.unmountOnExit,\n        transition = _ref.transition;\n    return {\n      tabContext: _extends({}, prevState.tabContext, {\n        activeKey: activeKey,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        transition: transition\n      })\n    };\n  };\n\n  var _proto = TabContainer.prototype;\n\n  _proto.getKey = function getKey(key, type) {\n    var _this$props = this.props,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n    if (generateChildId) return generateChildId(key, type);\n    return id ? id + \"-\" + type + \"-\" + key : null;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        onSelect = _this$props2.onSelect;\n    return React.createElement(TabContext.Provider, {\n      value: this.state.tabContext\n    }, React.createElement(SelectableContext.Provider, {\n      value: onSelect\n    }, children));\n  };\n\n  return TabContainer;\n}(React.Component);\n\nexport default uncontrollable(TabContainer, {\n  activeKey: 'onSelect'\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavItem = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children);\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContent, _React$Component);\n\n  function TabContent() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        _this$props$as = _this$props.as,\n        Component = _this$props$as === void 0 ? 'div' : _this$props$as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix)\n    }));\n  };\n\n  return TabContent;\n}(React.Component);\n\nexport default createBootstrapComponent(TabContent, 'tab-content');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && unmountOnExit) return null;\n  var pane = React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return React.createElement(TabContext.Provider, {\n    value: null\n  }, React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nvar defaultProps = {\n  disabled: false\n};\nvar AbstractNavItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      className = _ref.className,\n      tabIndex = _ref.tabIndex,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      onClick = _ref.onClick,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"className\", \"tabIndex\", \"eventKey\", \"onSelect\", \"onClick\", \"as\"]);\n\n  var navKey = makeEventKey(eventKey, props.href);\n  var parentOnSelect = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n  var isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    props['data-rb-event-key'] = navKey;\n    props.id = navContext.getControllerId(navKey);\n    props['aria-controls'] = navContext.getControlledId(navKey);\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    props.tabIndex = isActive ? tabIndex : -1;\n    props['aria-selected'] = isActive;\n  }\n\n  var handleOnclick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (navKey == null) return;\n    if (onSelect) onSelect(navKey, e);\n    if (parentOnSelect) parentOnSelect(navKey, e);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  }));\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  disabled: false,\n  as: SafeAnchor\n};\nvar NavLink = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      href = _ref.href,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"disabled\", \"className\", \"href\", \"eventKey\", \"onSelect\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  return React.createElement(AbstractNavItem, _extends({}, props, {\n    href: href,\n    ref: ref,\n    eventKey: eventKey,\n    as: as,\n    disabled: disabled,\n    onSelect: onSelect,\n    className: classNames(className, bsPrefix, disabled && 'disabled')\n  }));\n});\nNavLink.displayName = 'NavLink';\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n\n      if (result != null) {\n        error = result;\n      }\n    });\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = mapContextToProps;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _forwardRef = _interopRequireDefault(require(\"./forwardRef\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getDisplayName = function getDisplayName(Component) {\n  var name = typeof Component === 'string' ? Component : Component.name || Component.displayName;\n  return name ? \"ContextTransform(\" + name + \")\" : 'ContextTransform';\n};\n\nvar ensureConsumer = function ensureConsumer(c) {\n  return c.Consumer || c;\n};\n\nfunction $mapContextToProps(_ref, Component) {\n  var maybeArrayOfConsumers = _ref.consumers,\n      mapToProps = _ref.mapToProps,\n      displayName = _ref.displayName,\n      _ref$forwardRefAs = _ref.forwardRefAs,\n      forwardRefAs = _ref$forwardRefAs === void 0 ? 'ref' : _ref$forwardRefAs;\n  var consumers = maybeArrayOfConsumers;\n\n  if (!Array.isArray(maybeArrayOfConsumers)) {\n    consumers = [maybeArrayOfConsumers];\n  }\n\n  var SingleConsumer = ensureConsumer(consumers[0]);\n\n  function singleRender(props, ref) {\n    var _extends2;\n\n    var propsWithRef = _extends((_extends2 = {}, _extends2[forwardRefAs] = ref, _extends2), props);\n\n    return _react.default.createElement(SingleConsumer, null, function (value) {\n      return _react.default.createElement(Component, _extends({}, propsWithRef, mapToProps(value, props)));\n    });\n  }\n\n  function multiRender(props, ref) {\n    var _extends3;\n\n    var propsWithRef = _extends((_extends3 = {}, _extends3[forwardRefAs] = ref, _extends3), props);\n\n    return consumers.reduceRight(function (inner, Context) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var Consumer = ensureConsumer(Context);\n        return _react.default.createElement(Consumer, null, function (value) {\n          return inner.apply(void 0, args.concat([value]));\n        });\n      };\n    }, function () {\n      for (var _len2 = arguments.length, contexts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        contexts[_key2] = arguments[_key2];\n      }\n\n      return _react.default.createElement(Component, _extends({}, propsWithRef, mapToProps.apply(void 0, contexts.concat([props]))));\n    })();\n  }\n\n  var contextTransform = consumers.length === 1 ? singleRender : multiRender;\n  return (0, _forwardRef.default)(contextTransform, {\n    displayName: displayName || getDisplayName(Component)\n  });\n}\n\nfunction mapContextToProps(maybeOpts, mapToProps, Component) {\n  if (arguments.length === 2) return $mapContextToProps(maybeOpts, mapToProps);\n  return $mapContextToProps({\n    consumers: maybeOpts,\n    mapToProps: mapToProps\n  }, Component);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport qsa from 'dom-helpers/query/querySelectorAll';\nimport mapContextToProps from '@restart/context/mapContextToProps';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport TabContext from './TabContext';\n\nvar noop = function noop() {};\n\nvar AbstractNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(AbstractNav, _React$Component);\n\n  function AbstractNav() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      navContext: null\n    };\n\n    _this.handleSelect = function (key, event) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          parentOnSelect = _this$props.parentOnSelect;\n      if (key == null) return;\n      if (onSelect) onSelect(key, event);\n      if (parentOnSelect) parentOnSelect(key, event);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var onKeyDown = _this.props.onKeyDown;\n      if (onKeyDown) onKeyDown(event);\n      var nextActiveChild;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          nextActiveChild = _this.getNextActiveChild(-1);\n          break;\n\n        case 'ArrowRight':\n        case 'ArrowDown':\n          nextActiveChild = _this.getNextActiveChild(1);\n          break;\n\n        default:\n          return;\n      }\n\n      if (!nextActiveChild) return;\n      event.preventDefault();\n\n      _this.handleSelect(nextActiveChild.dataset.rbEventKey, event);\n\n      _this._needsRefocus = true;\n    };\n\n    _this.attachRef = function (ref) {\n      _this.listNode = ref;\n    };\n\n    return _this;\n  }\n\n  AbstractNav.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var activeKey = _ref.activeKey,\n        getControlledId = _ref.getControlledId,\n        getControllerId = _ref.getControllerId,\n        role = _ref.role;\n    return {\n      navContext: {\n        role: role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      }\n    };\n  };\n\n  var _proto = AbstractNav.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (!this._needsRefocus || !this.listNode) return;\n    var activeChild = this.listNode.querySelector('[data-rb-event-key].active');\n    if (activeChild) activeChild.focus();\n  };\n\n  _proto.getNextActiveChild = function getNextActiveChild(offset) {\n    if (!this.listNode) return null;\n    var items = qsa(this.listNode, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = this.listNode.querySelector('.active');\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$as = _this$props2.as,\n        Component = _this$props2$as === void 0 ? 'ul' : _this$props2$as,\n        _ = _this$props2.onSelect,\n        _0 = _this$props2.parentOnSelect,\n        _1 = _this$props2.getControlledId,\n        _2 = _this$props2.getControllerId,\n        _3 = _this$props2.activeKey,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"onSelect\", \"parentOnSelect\", \"getControlledId\", \"getControllerId\", \"activeKey\"]);\n\n    if (props.role === 'tablist') {\n      props.onKeyDown = this.handleKeyDown;\n    }\n\n    return React.createElement(SelectableContext.Provider, {\n      value: this.handleSelect\n    }, React.createElement(NavContext.Provider, {\n      value: this.state.navContext\n    }, React.createElement(Component, _extends({}, props, {\n      onKeyDown: this.handleKeyDown,\n      ref: this.attachRef\n    }))));\n  };\n\n  return AbstractNav;\n}(React.Component);\n\nexport default mapContextToProps([SelectableContext, TabContext], function (parentOnSelect, tabContext, _ref2) {\n  var role = _ref2.role;\n  if (!tabContext) return {\n    parentOnSelect: parentOnSelect\n  };\n  var activeKey = tabContext.activeKey,\n      getControllerId = tabContext.getControllerId,\n      getControlledId = tabContext.getControlledId;\n  return {\n    activeKey: activeKey,\n    parentOnSelect: parentOnSelect,\n    role: role || 'tablist',\n    // pass these two through to avoid having to listen to\n    // both Tab and Nav contexts in NavLink\n    getControllerId: getControllerId,\n    getControlledId: getControlledId\n  };\n}, AbstractNav);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardContext from './CardContext';\nimport AbstractNav from './AbstractNav';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar defaultProps = {\n  justify: false,\n  fill: false\n};\nvar Nav = React.forwardRef(function (uncontrolledProps, ref) {\n  var _classNames;\n\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      fill = _useUncontrolled.fill,\n      justify = _useUncontrolled.justify,\n      navbar = _useUncontrolled.navbar,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      activeKey = _useUncontrolled.activeKey,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"bsPrefix\", \"variant\", \"fill\", \"justify\", \"navbar\", \"className\", \"children\", \"activeKey\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav');\n  var navbarBsPrefix, cardHeaderBsPrefix;\n  var navbarContext = useContext(NavbarContext);\n  var cardContext = useContext(CardContext);\n\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    navbar = navbar == null ? true : navbar;\n  } else if (cardContext) {\n    cardHeaderBsPrefix = cardContext.cardHeaderBsPrefix;\n  }\n\n  return React.createElement(AbstractNav, _extends({\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, (_classNames = {}, _classNames[bsPrefix] = !navbar, _classNames[navbarBsPrefix + \"-nav\"] = navbar, _classNames[cardHeaderBsPrefix + \"-\" + variant] = !!cardHeaderBsPrefix, _classNames[bsPrefix + \"-\" + variant] = !!variant, _classNames[bsPrefix + \"-fill\"] = fill, _classNames[bsPrefix + \"-justified\"] = justify, _classNames))\n  }, props), children);\n});\nNav.displayName = 'Nav';\nNav.defaultProps = defaultProps;\nNav.Item = NavItem;\nNav.Link = NavLink;\nexport default Nav;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\n\nvar Tab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import { FETCH_DASHBOARDCLOGS, FETCH_DASHBOARDBINFO,GET_PROFESORES,PROFESOR } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlDashbrdBasicInfo, urlDashbrdCrseLogs } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\nexport const fetchUsuariosCrseLogs = createAction ( FETCH_DASHBOARDCLOGS, apiGet(urlDashbrdCrseLogs) );\r\nexport const fetchDashboardBasicInfo = createAction ( FETCH_DASHBOARDBINFO, apiGet(urlDashbrdBasicInfo) );\r\n","import React from 'react';\r\nimport NVD3Chart from 'react-nvd3';\r\n\r\nconst datum = [    \r\n    {key: \"Bajas\", y: 20, color: \"#3ebfea\"},    \r\n    {key: \"Activos\", y: 98, color: \"#1de9b6\"},\r\n];\r\n\r\nclass PieDonutChart extends React.Component {\r\n\r\n    render() {\r\n        return <NVD3Chart id=\"chart\" height={180} type=\"pieChart\" datum={datum} x=\"key\" y=\"y\" donut labelType='percent' />\r\n    }\r\n}\r\n\r\nexport default PieDonutChart;","import React from 'react';\r\n//import NVD3Chart from 'react-nvd3';\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\n\r\n\r\nfunction getData(data, type) {\r\n    let labels = []\r\n    let datn = []\r\n    let label = \"\"\r\n    if(type == \"participante\"){\r\n        label = \"Total de participantes \"\r\n        const len =  data.length ;\r\n        for (let i = 0; i < len; i++) {\r\n            labels.push(\r\n                data[i].fullname\r\n           );\r\n           datn.push(\r\n            data[i].usercount\r\n            );\r\n        }\r\n    }else{\r\n        label = \"Registros de actividad \"\r\n        const len =  data.length ;\r\n        for (let i = 0; i < len; i++) {\r\n            labels.push(\r\n                 data[i].fullname\r\n            );\r\n            datn.push(\r\n                data[i].total\r\n                );\r\n        }\r\n    }\r\n    \r\n\r\n    const datos = {\r\n        labels: labels,\r\n       // yAxisID: datn,\r\n        datasets: [\r\n          {\r\n            label: label,\r\n            data: datn,\r\n            backgroundColor: 'rgba(163,137,212,0.2)',\r\n            borderColor: 'rgba(137,160,212,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(137,160,212,0.4)',\r\n            hoverBorderColor: 'rgba(137,160,212,1)',\r\n            \r\n          }\r\n        ]\r\n      };\r\n    return datos\r\n}\r\nclass MultiBarChart extends React.Component {\r\n    \r\n    render() {\r\n      console.log(this.props.data)\r\n        //participante\r\n        const data = getData(this.props.data,this.props.type);\r\n        //return <NVD3Chart id=\"barChart\" type=\"discreteBarChart\" wrapLabels={true} margin={{top: 30, right: 20, bottom: 150, left: 20}} datum={data} x=\"x\" y=\"y\" height={500} showValues groupSpacing={0.2} showControls={false}/>\r\n        return <HorizontalBar  data={data}/>\r\n    }\r\n}\r\n\r\nexport default MultiBarChart;","import React from 'react';\r\nimport {Row, Col, Card, Table, Tabs, Tab, Button} from 'react-bootstrap';\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\nimport {ALUMNO, PROFESOR, COORDINADOR } from \"./../../../constants\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n//action creators:\r\nimport { fetchUsuariosCrseLogs, fetchDashboardBasicInfo } from '../../../actions/fetchDashboard'\r\n\r\n//creador de tablas\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { multiSelectFilter, Comparator  } from 'react-bootstrap-table2-filter';\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\n\r\n//selectors que obtienen los datos globales\r\nimport { getDashboardLogs,getDashboardInfo } from '../../../selectors/usuarios';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//charts\r\nimport PieDonutChart from \"../../components/Charts/PieDonutChart\";\r\nimport MultiBarChart from \"../../components/Charts/MultiBarChart\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          data: [],\r\n          open: false,\r\n          option: 1\r\n        };\r\n      }\r\n    componentDidMount(){\r\n        if(this.props.dashboardinfo.length == 0 || this.props.dashboardlogs.length == 0){            \r\n            this.props.fetchUsuariosCrseLogs() \r\n            this.props.fetchDashboardBasicInfo()        \r\n        }            \r\n    }   \r\n\r\n    renderChart(data, type){\r\n        return <MultiBarChart data={data} type={type}/>                   \r\n    }\r\n    handleClick(key){\r\n        if(key == \"participante\"){\r\n            if(this.state.option == 2){\r\n                this.setState({option: 1});\r\n            }\r\n        }else{\r\n            this.setState({option: 2});\r\n        }\r\n    }\r\n    render() {\r\n       \r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col md={4} xl={4}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h6 className='mb-4'>Profesores</h6>\r\n                                <div className=\"row d-flex align-items-center\">\r\n                                    <div className=\"col-5\">\r\n                                        <h1 className=\"text-center f-w-300 d-flex justify-content-center m-b-0 \">\r\n                                            { \r\n                                                this.props.dashboardinfo.map(function(total){\r\n                                                    \r\n                                                     if(total.roleid == PROFESOR){ return   total.usercount }                                     \r\n                                                })                                                                                          \r\n                                            }\r\n                                        </h1>\r\n                                    </div>\r\n                                </div>    \r\n                                \r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4} xl={4}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h6 className='mb-4'>Estudiantes</h6>\r\n                                <div className=\"row d-flex align-items-center\">\r\n                                    <div className=\"col-9\">\r\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-arrow-down text-c-red f-30 m-r-5\"/> \r\n                                        {                                             \r\n                                            this.props.dashboardinfo.map(function(total){                                                \r\n                                                 if(total.roleid == ALUMNO){ return   total.usercount }                                     \r\n                                            })                                                                                                                                                                                                                           \r\n                                        }\r\n                                        </h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3 text-right\">\r\n                                        <p className=\"m-b-0\">36%</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress m-t-30\" style={{height: '7px'}}>\r\n                                    <div className=\"progress-bar progress-c-theme2\" role=\"progressbar\" style={{width: '35%'}} aria-valuenow=\"35\" aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4} xl={4}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h6 className='mb-4'>Coordinadores</h6>\r\n                                <div className=\"row d-flex align-items-center\">\r\n                                    <div className=\"col-9\">\r\n                                    <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-arrow-up text-c-green f-30 m-r-5\"/>\r\n                                    {                                             \r\n                                        this.props.dashboardinfo.map(function(total){                                                \r\n                                                if(total.roleid == COORDINADOR){ return   total.usercount }else{ return 0}                                     \r\n                                        })                                                                                                                                                                                                                           \r\n                                    }                                    \r\n                                    </h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3 text-right\">\r\n                                        <p className=\"m-b-0\">70%</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress m-t-30\" style={{height: '7px'}}>\r\n                                    <div className=\"progress-bar progress-c-theme\" role=\"progressbar\" style={{width: '70%'}} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>                                                                                                        \r\n                </Row>\r\n\r\n                <Row className=\"table-dashboard\">\r\n                    <Col>\r\n                        <Card>\r\n                        <Card.Body>\r\n\r\n\r\n\r\n\r\n\r\n                        <h3 className='mb-4'>CURSOS: { this.props.dashboardlogs.length}</h3>\r\n                        <div className=\"row d-flex align-items-center\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n               \r\n                    <Col className=\"horizontal-bar\">\r\n                        <Tabs variant=\"pills\" defaultActiveKey=\"participante\" className=\"mb-3\" onSelect={(e) => this.handleClick(e)}>\r\n                            <Tab eventKey=\"participante\" title=\"PARTICIPANTES\" >\r\n                                \r\n                                {\r\n                                   this.state.option == 1 ? this.renderChart(this.props.dashboardlogs,\"participante\") : 0\r\n                                }\r\n                                   <p className=\"chart-height\">.</p>                                                           \r\n              \r\n                            </Tab>\r\n                            <Tab eventKey=\"registros\" title=\"REGISTROS DE ACTIVIDAD\" >\r\n\r\n                                {\r\n                                   this.state.option == 2 ? this.renderChart(this.props.dashboardlogs,\"registros\") : 0\r\n                                }   \r\n                                     <p className=\"chart-height\">.</p> \r\n    \r\n\r\n                                   \r\n                            </Tab>\r\n\r\n                        </Tabs>\r\n\r\n                    </Col>\r\n                \r\n\r\n\r\n                        \r\n                        </div>\r\n                         </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//simplificado\r\n//const mapDispatchToProps = { fetchProfesores }\r\n\r\n//No simplificado\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsuariosCrseLogs: () => dispatch(fetchUsuariosCrseLogs()),\r\n        fetchDashboardBasicInfo: () => dispatch(fetchDashboardBasicInfo())\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    dashboardinfo: getDashboardInfo(state),\r\n    dashboardlogs: getDashboardLogs(state),\r\n});\r\n\r\n\r\n//connect(props variable,props.functions reducers);\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(Dashboard));","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { uncontrollable } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport UncontrolledTabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './utils/ElementChildren';\nvar TabContainer = UncontrolledTabContainer.ControlledComponent;\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tabs, _React$Component);\n\n  function Tabs() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tabs.prototype;\n\n  _proto.renderTab = function renderTab(child) {\n    var _child$props = child.props,\n        title = _child$props.title,\n        eventKey = _child$props.eventKey,\n        disabled = _child$props.disabled,\n        tabClassName = _child$props.tabClassName;\n\n    if (title == null) {\n      return null;\n    }\n\n    return React.createElement(NavItem, {\n      as: NavLink,\n      eventKey: eventKey,\n      disabled: disabled,\n      className: tabClassName\n    }, title);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        id = _this$props.id,\n        onSelect = _this$props.onSelect,\n        transition = _this$props.transition,\n        mountOnEnter = _this$props.mountOnEnter,\n        unmountOnExit = _this$props.unmountOnExit,\n        children = _this$props.children,\n        _this$props$activeKey = _this$props.activeKey,\n        activeKey = _this$props$activeKey === void 0 ? getDefaultActiveKey(children) : _this$props$activeKey,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"]);\n\n    return React.createElement(TabContainer, {\n      id: id,\n      activeKey: activeKey,\n      onSelect: onSelect,\n      transition: transition,\n      mountOnEnter: mountOnEnter,\n      unmountOnExit: unmountOnExit\n    }, React.createElement(Nav, _extends({}, props, {\n      role: \"tablist\",\n      as: \"nav\"\n    }), map(children, this.renderTab)), React.createElement(TabContent, null, map(children, function (child) {\n      var childProps = _extends({}, child.props);\n\n      delete childProps.title;\n      delete childProps.disabled;\n      delete childProps.tabClassName;\n      return React.createElement(TabPane, childProps);\n    })));\n  };\n\n  return Tabs;\n}(React.Component);\n\nTabs.defaultProps = defaultProps;\nexport default uncontrollable(Tabs, {\n  activeKey: 'onSelect'\n});","import moment from 'moment';\r\n//obtiene datos del servidor, al ser llamado por un action creator\r\nexport const apiGet = (url) => () => fetch(url).then(v=>v.json());\r\n\r\n//obtiene los logs de moodle\r\nexport const getLogs = (urlLogs, idUser, idRol,idCourse) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{       \r\n       const usuario = [];                                                        \r\n       const mapUser = new Map();\r\n        let contUser = 0;\r\n        let countcourse = -1;\r\n       let count = 0;       \r\n       let first = 0;\r\n       let last = 0;\r\n       const map = new Map();\r\n           for(const item of logsJson){    \r\n               if(!mapUser.has(item.id_user+item.courseid)){                \r\n                mapUser.set(item.id_user+item.courseid,  true)   \r\n                count = 0                     \r\n                if(!map.has(item.id_user)){                                                                \r\n                    map.set(item.id_user, true)\r\n                    contUser = 0;\r\n                    countcourse = countcourse + 1;                         \r\n                    usuario.push({\r\n                        nombre: item.firstname+\" \"+item.apellido,\r\n                        courses:[{\r\n                            fullname: item.fullname,                     \r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }]\r\n                    })\r\n                    }else{                     \r\n                        contUser = contUser + 1;                \r\n                        usuario[countcourse].courses.push({\r\n                            fullname: item.fullname,\r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }) \r\n                    }  \r\n               }else{ \r\n                    count = count +1                              \r\n                    usuario[countcourse].courses[contUser].count = count+1         \r\n               }\r\n               //hace un ordenamiento de burbuja para obtener la ultima \r\n               //y primer fecha de entrada por cada curso\r\n               if(first > item.timecreated || first === 0 || usuario[countcourse].courses[contUser].first === 0){\r\n                   first =  item.timecreated\r\n                   usuario[countcourse].courses[contUser].first = item.timecreated\r\n               }\r\n               if(last  < item.timecreated || last === 0 || usuario[countcourse].courses[contUser].last === 0){\r\n                   last = item.timecreated\r\n                   usuario[countcourse].courses[contUser].last = item.timecreated\r\n               }\r\n           }            \r\n           return usuario                                           \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getSingleLogs = (urlLogs, idUser, idRol, idCourse, userName) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{   \r\n        if(idCourse == 0){                                                            \r\n        const result = [];\r\n        let count = 0;\r\n        let countcourse = -1;\r\n        let first = 0;\r\n        let last = 0;\r\n        let total = 0;\r\n        const map = new Map();\r\n            for(const item of logsJson){        \r\n                    //filtra los courses por su id \r\n                    \r\n                if(!map.has(item.courseid)){                                                                \r\n                    map.set(item.courseid, true)\r\n                    count = 0;\r\n                    item.timecreated != null ? total = total+1 : total = total+0;\r\n                    countcourse = countcourse + 1;\r\n                    //inserta en nuevo array courses con id diferente\r\n                    result.push({\r\n                        courseid: item.courseid,\r\n                        fullname: item.fullname,\r\n                        userid: item.userid,\r\n                        name: item.name,                       \r\n                        count: count +1,\r\n                        total: total,\r\n                        first: 0,\r\n                        last:0\r\n                    })                                \r\n                }else{\r\n                    //cada vez que detecta un id repetido\r\n                    //aumenta el contador, el cual indica la cantidad\r\n                    //total de actividad en el curso\r\n                    total = total+1;\r\n                    result[countcourse].total = total \r\n                    count = count + 1;                   \r\n                    result[countcourse].count = count+1                                \r\n                }\r\n                //hace un ordenamiento de burbuja para obtener la ultima \r\n                //y primer fecha de entrada por cada curso\r\n                if(first > item.timecreated || first === 0 || result[countcourse].first === 0){\r\n                    first =  item.timecreated\r\n                    result[countcourse].first = item.timecreated\r\n                }\r\n                if(last  < item.timecreated || last === 0 || result[countcourse].last === 0){\r\n                    last = item.timecreated\r\n                    result[countcourse].last = item.timecreated\r\n                }\r\n            } \r\n                        \r\n\r\n                \r\n                return result \r\n           }else{\r\n\r\n            const result = [];\r\n            let count = 0;\r\n            let countcourse = -1;\r\n            const map = new Map();\r\n                for(const item of logsJson){        \r\n                        //filtra los accesos del usuario por fecha                                          \r\n                    if(!map.has(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"))){                                                                \r\n                        map.set(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"), true)\r\n                        item.timecreated != null ? count = 1 : count = 0;\r\n                         countcourse = countcourse + 1;\r\n                        //inserta en nuevo array courses con fecha de diferencia\r\n                        result.push({\r\n                            timecreated: item.timecreated,              \r\n                            count: count\r\n                        })                                \r\n                    }else{\r\n                        //cada vez que detecta una fecha repetida\r\n                        //aumenta el contador, el cual indica la cantidad\r\n                        //total de actividad en el curso\r\n                        count = count + 1;                   \r\n                        result[countcourse].count = count                              \r\n                    }\r\n                } \r\n\r\n    \r\n              result.push({\r\n                courseName: logsJson[0].fullname,\r\n                userName\r\n              })  \r\n                console.log(\"logs logsJson\");\r\n                console.log(logsJson);\r\n                return result\r\n           }  \r\n           \r\n                                                  \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n \r\nexport const getCourses = (url) => {                \r\n    return fetch(`${url}`\r\n        ).then(courses => (courses.json()).then(coursesJson =>{   \r\n\r\n        return coursesJson    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getCourseUsers = (url,idCourse,type) => {                \r\n    return fetch(`${url}/${idCourse}/${type}`\r\n        ).then(users => (users.json()).then(usersJson =>{   \r\n            const result = [];\r\n            for(const item of usersJson){             \r\n                result.push(item.userid)            \r\n            }\r\n        return result    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\n","//url para obtener usuarioa\r\nconst urlBase = \"http://campus-virtuales.com/sigem/public/\"\r\nexport const urlUsuarios = `${urlBase}usuarios`;\r\nexport const urlDashbrdBasicInfo = `${urlBase}basicinfo`;\r\nexport const urlDashbrdCrseLogs = `${urlBase}courselogs`;\r\nexport const urlLogs = `${urlBase}logs`;\r\nexport const urlCourses = `${urlBase}courses`;\r\nexport const urlcourseUsers = `${urlBase}courseuser`;","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;"],"sourceRoot":""}