{"version":3,"sources":["actions/fetchUsuarios.js","actions/fillAlumnos.js","actions/fillProfesores.js","selectors/usuarios.js","App/components/Charts/PieDonutChart.js","App/containers/Dashboard/index.js","api/index.js","api/url.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchUsuarios","_constants__WEBPACK_IMPORTED_MODULE_0__","redux_actions__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_api_url__WEBPACK_IMPORTED_MODULE_3__","createAction","FETCH_USUARIOS","apiGet","urlUsuarios","GET_PROFESORES","GET_ALUMNOS","fillAlumnos","fillProfesores","getUsuarios","getAlumnos","getProfesores","state","usuarios","alumnos","profesores","datum","key","y","color","PieDonutChart","react_default","a","createElement","react_nvd3_min_default","id","height","type","x","donut","labelType","React","Component","Dashboard","this","props","length","alumnosUsers","filter","alumno","roleid","profesoresUsers","_Aux","className","href","DEMO","BLANK_LINK","style","width","src","avatar1","alt","avatar2","avatar3","Row","Col","md","xl","Card","Body","Charts_PieDonutChart","role","aria-valuenow","aria-valuemin","aria-valuemax","withRouter","connect","dispatch","getLogs","getSingleLogs","getCourses","getCourseUsers","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","url","fetch","then","v","json","urlLogs","idUser","idRol","idCourse","concat","logs","logsJson","usuario","mapUser","Map","contUser","countcourse","count","first","last","map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","has","id_user","courseid","courses","set","push","fullname","nombre","firstname","apellido","timecreated","err","return","catch","error","console","log","userName","result","total","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","userid","name","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","moment","unix","format","courseName","coursesJson","users","usersJson","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","urlCourses","urlcourseUsers","urlBase"],"mappings":"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","file":"static/js/17.1a767b4c.chunk.js","sourcesContent":["import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\nexport const fetchUsuarios = createAction ( FETCH_USUARIOS, apiGet(urlUsuarios) );\r\nexport const getProfesores = createAction(GET_PROFESORES);\r\nexport const getAlumnos = createAction(GET_ALUMNOS);\r\n","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\n//export const getAlumnos = createAction(GET_ALUMNOS, apiGet(urlUsuarios));\r\nexport const fillAlumnos = createAction(GET_ALUMNOS);\r\n","import { FETCH_USUARIOS, GET_PROFESORES, GET_ALUMNOS } from '../constants';\r\n\r\nimport { createAction } from 'redux-actions';\r\nimport { apiGet } from '../api'\r\nimport { urlUsuarios } from '../api/url';\r\n\r\n//midleware redux promises\r\n//recibe type y una promise, al concluir hace el duplicado del type con el nuevo payload\r\n\r\n//export const getProfesores = createAction(GET_PROFESORES, apiGet(urlUsuarios));\r\nexport const fillProfesores = createAction(GET_PROFESORES);\r\n\r\n","export const getUsuarios = state => state.usuarios;\r\nexport const getAlumnos = state => state.alumnos;\r\nexport const getProfesores = state => state.profesores;","import React from 'react';\r\nimport NVD3Chart from 'react-nvd3';\r\n\r\nconst datum = [    \r\n    {key: \"Bajas\", y: 20, color: \"#3ebfea\"},    \r\n    {key: \"Activos\", y: 98, color: \"#1de9b6\"},\r\n];\r\n\r\nclass PieDonutChart extends React.Component {\r\n\r\n    render() {\r\n        return <NVD3Chart id=\"chart\" height={180} type=\"pieChart\" datum={datum} x=\"key\" y=\"y\" donut labelType='percent' />\r\n    }\r\n}\r\n\r\nexport default PieDonutChart;","import React from 'react';\r\nimport {Row, Col, Card, Table, Tabs, Tab} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n//action creators:\r\nimport { fetchUsuarios } from '../../../actions/fetchUsuarios'\r\nimport { fillAlumnos } from '../../../actions/fillAlumnos';\r\nimport { fillProfesores } from '../../../actions/fillProfesores';\r\n\r\n//selectors que obtienen los datos globales\r\nimport { getUsuarios,getAlumnos,getProfesores } from '../../../selectors/usuarios';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//charts\r\nimport PieDonutChart from \"../../components/Charts/PieDonutChart\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.usuarios.length > 0){\r\n            const alumnosUsers = this.props.usuarios.filter(alumno => alumno.roleid === \"5\");\r\n            const profesoresUsers = this.props.usuarios.filter(alumno => alumno.roleid === \"3\");                                       \r\n            if(!this.props.alumnos[0] && !this.props.alumnos[0]){\r\n                this.props.fillAlumnos(alumnosUsers);  \r\n                this.props.fillProfesores(profesoresUsers);  \r\n            }          \r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.usuarios.length == 0){\r\n            this.props.fetchUsuarios()          \r\n        }            \r\n        if(this.props.usuarios.length > 0 && !this.props.alumnos[0]){\r\n            this.props.fillAlumnos(); \r\n            this.props.fillProfesores();\r\n        }\r\n    }   \r\n\r\n    \r\n    render() {\r\n        const tabContent = (\r\n            <Aux>\r\n                <div className=\"media friendlist-box align-items-center justify-content-center m-b-20\">\r\n                    <div className=\"m-r-10 photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar1} alt=\"activity-user\"/></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <h6 className=\"m-0 d-inline\">Silje Larsen</h6>\r\n                        <span className=\"float-right d-flex  align-items-center\"><i className=\"fa fa-caret-up f-22 m-r-10 text-c-green\"/>3784</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"media friendlist-box align-items-center justify-content-center m-b-20\">\r\n                    <div className=\"m-r-10 photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <h6 className=\"m-0 d-inline\">Julie Vad</h6>\r\n                        <span className=\"float-right d-flex  align-items-center\"><i className=\"fa fa-caret-up f-22 m-r-10 text-c-green\"/>3544</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"media friendlist-box align-items-center justify-content-center m-b-20\">\r\n                    <div className=\"m-r-10 photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar3} alt=\"activity-user\"/></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <h6 className=\"m-0 d-inline\">Storm Hanse</h6>\r\n                        <span className=\"float-right d-flex  align-items-center\"><i className=\"fa fa-caret-down f-22 m-r-10 text-c-red\"/>2739</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"media friendlist-box align-items-center justify-content-center m-b-20\">\r\n                    <div className=\"m-r-10 photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar1} alt=\"activity-user\"/></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <h6 className=\"m-0 d-inline\">Frida Thomse</h6>\r\n                        <span className=\"float-right d-flex  align-items-center\"><i className=\"fa fa-caret-down f-22 m-r-10 text-c-red\"/>1032</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"media friendlist-box align-items-center justify-content-center m-b-20\">\r\n                    <div className=\"m-r-10 photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <h6 className=\"m-0 d-inline\">Silje Larsen</h6>\r\n                        <span className=\"float-right d-flex  align-items-center\"><i className=\"fa fa-caret-up f-22 m-r-10 text-c-green\"/>8750</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"media friendlist-box align-items-center justify-content-center\">\r\n                    <div className=\"m-r-10 photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar3} alt=\"activity-user\"/></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <h6 className=\"m-0 d-inline\">Storm Hanse</h6>\r\n                        <span className=\"float-right d-flex  align-items-center\"><i className=\"fa fa-caret-down f-22 m-r-10 text-c-red\"/>8750</span>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col md={6} xl={4}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h6 className='mb-4'>Profesores</h6>\r\n                                <div className=\"row d-flex align-items-center\">\r\n                                    <div className=\"col-5\">\r\n                                        <h1 className=\"text-center f-w-300 d-flex justify-content-center m-b-0 \">\r\n                                            { \r\n                                                this.props.profesores[0] ? this.props.profesores[0].length : \"loading data\"                                                                                            \r\n                                            }\r\n                                        </h1>\r\n                                    </div>\r\n                                    <div className=\"text-center col-7\">\r\n                                    <PieDonutChart/>\r\n                                    </div>\r\n                                </div>    \r\n                                \r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} xl={4}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h6 className='mb-4'>Estudiantes</h6>\r\n                                <div className=\"row d-flex align-items-center\">\r\n                                    <div className=\"col-9\">\r\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-arrow-down text-c-red f-30 m-r-5\"/> \r\n                                        { \r\n                                            this.props.alumnos[0] ? this.props.alumnos[0].length : \"loading data\"                                                                                            \r\n                                        }\r\n                                        </h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3 text-right\">\r\n                                        <p className=\"m-b-0\">36%</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress m-t-30\" style={{height: '7px'}}>\r\n                                    <div className=\"progress-bar progress-c-theme2\" role=\"progressbar\" style={{width: '35%'}} aria-valuenow=\"35\" aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <h6 className='mb-4'>Coordinadores</h6>\r\n                                <div className=\"row d-flex align-items-center\">\r\n                                    <div className=\"col-9\">\r\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-arrow-up text-c-green f-30 m-r-5\"/> 3</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3 text-right\">\r\n                                        <p className=\"m-b-0\">70%</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress m-t-30\" style={{height: '7px'}}>\r\n                                    <div className=\"progress-bar progress-c-theme\" role=\"progressbar\" style={{width: '70%'}} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    \r\n                    \r\n                                                                \r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//simplificado\r\n//const mapDispatchToProps = { fetchProfesores }\r\n\r\n//No simplificado\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsuarios: () => dispatch(fetchUsuarios()),\r\n        fillAlumnos: (alumnos) => dispatch(fillAlumnos(alumnos)),\r\n        fillProfesores: (profesores) => dispatch(fillProfesores(profesores)),\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    usuarios: getUsuarios(state),\r\n    alumnos: getAlumnos(state),\r\n    profesores: getProfesores(state),\r\n});\r\n\r\n\r\n//connect(props variable,props.functions reducers);\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(Dashboard));","import moment from 'moment';\r\n//obtiene datos del servidor, al ser llamado por un action creator\r\nexport const apiGet = (url) => () => fetch(url).then(v=>v.json());\r\n\r\n//obtiene los logs de moodle\r\nexport const getLogs = (urlLogs, idUser, idRol,idCourse) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{       \r\n       const usuario = [];                                                        \r\n       const mapUser = new Map();\r\n        let contUser = 0;\r\n        let countcourse = -1;\r\n       let count = 0;       \r\n       let first = 0;\r\n       let last = 0;\r\n       const map = new Map();\r\n           for(const item of logsJson){    \r\n               if(!mapUser.has(item.id_user+item.courseid)){                \r\n                mapUser.set(item.id_user+item.courseid,  true)   \r\n                count = 0                     \r\n                if(!map.has(item.id_user)){                                                                \r\n                    map.set(item.id_user, true)\r\n                    contUser = 0;\r\n                    countcourse = countcourse + 1;                         \r\n                    usuario.push({\r\n                        nombre: item.firstname+\" \"+item.apellido,\r\n                        courses:[{\r\n                            fullname: item.fullname,                     \r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }]\r\n                    })\r\n                    }else{                     \r\n                        contUser = contUser + 1;                \r\n                        usuario[countcourse].courses.push({\r\n                            fullname: item.fullname,\r\n                            count: count +1,\r\n                            first: 0,\r\n                            last:0\r\n                        }) \r\n                    }  \r\n               }else{ \r\n                    count = count +1                              \r\n                    usuario[countcourse].courses[contUser].count = count+1         \r\n               }\r\n               //hace un ordenamiento de burbuja para obtener la ultima \r\n               //y primer fecha de entrada por cada curso\r\n               if(first > item.timecreated || first === 0 || usuario[countcourse].courses[contUser].first === 0){\r\n                   first =  item.timecreated\r\n                   usuario[countcourse].courses[contUser].first = item.timecreated\r\n               }\r\n               if(last  < item.timecreated || last === 0 || usuario[countcourse].courses[contUser].last === 0){\r\n                   last = item.timecreated\r\n                   usuario[countcourse].courses[contUser].last = item.timecreated\r\n               }\r\n           }            \r\n           return usuario                                           \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getSingleLogs = (urlLogs, idUser, idRol, idCourse, userName) => {                \r\n    return fetch(`${urlLogs}/${idUser}/${idRol}/${idCourse}`\r\n        ).then(logs => (logs.json()).then(logsJson =>{   \r\n        if(idCourse == 0){                                                            \r\n        const result = [];\r\n        let count = 0;\r\n        let countcourse = -1;\r\n        let first = 0;\r\n        let last = 0;\r\n        let total = 0;\r\n        const map = new Map();\r\n            for(const item of logsJson){        \r\n                    //filtra los courses por su id \r\n                    \r\n                if(!map.has(item.courseid)){                                                                \r\n                    map.set(item.courseid, true)\r\n                    count = 0;\r\n                    item.timecreated != null ? total = total+1 : total = total+0;\r\n                    countcourse = countcourse + 1;\r\n                    //inserta en nuevo array courses con id diferente\r\n                    result.push({\r\n                        courseid: item.courseid,\r\n                        fullname: item.fullname,\r\n                        userid: item.userid,\r\n                        name: item.name,                       \r\n                        count: count +1,\r\n                        total: total,\r\n                        first: 0,\r\n                        last:0\r\n                    })                                \r\n                }else{\r\n                    //cada vez que detecta un id repetido\r\n                    //aumenta el contador, el cual indica la cantidad\r\n                    //total de actividad en el curso\r\n                    total = total+1;\r\n                    result[countcourse].total = total \r\n                    count = count + 1;                   \r\n                    result[countcourse].count = count+1                                \r\n                }\r\n                //hace un ordenamiento de burbuja para obtener la ultima \r\n                //y primer fecha de entrada por cada curso\r\n                if(first > item.timecreated || first === 0 || result[countcourse].first === 0){\r\n                    first =  item.timecreated\r\n                    result[countcourse].first = item.timecreated\r\n                }\r\n                if(last  < item.timecreated || last === 0 || result[countcourse].last === 0){\r\n                    last = item.timecreated\r\n                    result[countcourse].last = item.timecreated\r\n                }\r\n            } \r\n                        \r\n\r\n                \r\n                return result \r\n           }else{\r\n\r\n            const result = [];\r\n            let count = 0;\r\n            let countcourse = -1;\r\n            const map = new Map();\r\n                for(const item of logsJson){        \r\n                        //filtra los accesos del usuario por fecha                                          \r\n                    if(!map.has(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"))){                                                                \r\n                        map.set(moment.unix(item.timecreated).format(\"YYYY-MM-DD\"), true)\r\n                        item.timecreated != null ? count = 1 : count = 0;\r\n                         countcourse = countcourse + 1;\r\n                        //inserta en nuevo array courses con fecha de diferencia\r\n                        result.push({\r\n                            timecreated: item.timecreated,              \r\n                            count: count\r\n                        })                                \r\n                    }else{\r\n                        //cada vez que detecta una fecha repetida\r\n                        //aumenta el contador, el cual indica la cantidad\r\n                        //total de actividad en el curso\r\n                        count = count + 1;                   \r\n                        result[countcourse].count = count                              \r\n                    }\r\n                } \r\n\r\n    \r\n              result.push({\r\n                courseName: logsJson[0].fullname,\r\n                userName\r\n              })  \r\n                console.log(\"logs logsJson\");\r\n                console.log(logsJson);\r\n                return result\r\n           }  \r\n           \r\n                                                  \r\n           //apicall(result)         \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n \r\nexport const getCourses = (url) => {                \r\n    return fetch(`${url}`\r\n        ).then(courses => (courses.json()).then(coursesJson =>{   \r\n\r\n        return coursesJson    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\nexport const getCourseUsers = (url,idCourse) => {                \r\n    return fetch(`${url}/${idCourse}`\r\n        ).then(users => (users.json()).then(usersJson =>{   \r\n            const result = [];\r\n            for(const item of usersJson){             \r\n                result.push(item.userid)            \r\n            }\r\n        return result    \r\n   })).catch(error => console.log('Error ' + error))                         \r\n};\r\n\r\n","//url para obtener usuarioa\r\nconst urlBase = \"http://campus-virtuales.com/sigem/public/\"\r\nexport const urlUsuarios = `${urlBase}usuarios`;\r\nexport const urlLogs = `${urlBase}logs`;\r\nexport const urlCourses = `${urlBase}courses`;\r\nexport const urlcourseUsers = `${urlBase}courseuser`;"],"sourceRoot":""}